{
  "version": 3,
  "sources": ["../../@mdui/jq/shared/helper.js", "../../ssr-window/ssr-window.esm.js", "../../@mdui/jq/shared/core.js", "../../@mdui/jq/shared/dom.js", "../../@mdui/jq/$.js", "../../@lit/reactive-element/src/decorators/property.ts", "../../@lit/reactive-element/src/decorators/state.ts", "../../@lit/reactive-element/src/decorators/base.ts", "../../@lit/reactive-element/src/decorators/query-assigned-elements.ts", "../../@lit/reactive-element/src/decorators/query.ts", "../../@mdui/jq/methods/each.js", "../../@mdui/jq/shared/attributes.js", "../../@mdui/jq/shared/css.js", "../../@mdui/jq/methods/attr.js", "../../@mdui/jq/methods/width.js", "../../@mdui/jq/functions/unique.js", "../../@mdui/shared/controllers/defined.js", "../../@mdui/shared/controllers/has-slot.js", "../../@mdui/shared/helpers/decorator.js", "../../@mdui/shared/lit-styles/component-style.js", "../../@mdui/shared/base/mdui-element.js", "../../@mdui/jq/methods/is.js", "../../@mdui/jq/methods/children.js", "../../@mdui/jq/methods/get.js"],
  "sourcesContent": ["/**\n * 获取指定元素的标签名（小写），不存在元素的返回空字符串\n * @param element\n */\nexport const getNodeName = (element) => {\n    return element?.nodeName.toLowerCase() ?? '';\n};\n/**\n * 判断元素是否为指定的标签名（不区分大小写）\n * @param element\n * @param name\n */\nexport const isNodeName = (element, name) => {\n    return element?.nodeName.toLowerCase() === name.toLowerCase();\n};\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nexport const isFunction = (target) => {\n    return typeof target === 'function';\n};\nexport const isString = (target) => {\n    return typeof target === 'string';\n};\nexport const isNumber = (target) => {\n    return typeof target === 'number';\n};\nexport const isBoolean = (target) => {\n    return typeof target === 'boolean';\n};\nexport const isUndefined = (target) => {\n    return typeof target === 'undefined';\n};\nexport const isNull = (target) => {\n    return target === null;\n};\nexport const isWindow = (target) => {\n    return typeof Window !== 'undefined' && target instanceof Window;\n};\nexport const isDocument = (target) => {\n    return typeof Document !== 'undefined' && target instanceof Document;\n};\nexport const isElement = (target) => {\n    return typeof Element !== 'undefined' && target instanceof Element;\n};\nexport const isNode = (target) => {\n    return typeof Node !== 'undefined' && target instanceof Node;\n};\nexport const isArrayLike = (target) => {\n    return (!isFunction(target) &&\n        !isWindow(target) &&\n        isNumber(target.length));\n};\nexport const isObjectLike = (target) => {\n    return typeof target === 'object' && target !== null;\n};\nexport const toElement = (target) => {\n    return isDocument(target) ? target.documentElement : target;\n};\n/**\n * 把用 - 分隔的字符串转为驼峰（如 box-sizing 转换为 boxSizing）\n * @param string\n */\nexport const toCamelCase = (string) => {\n    return string.replace(/-([a-z])/g, (_, letter) => {\n        return letter.toUpperCase();\n    });\n};\n/**\n * 把驼峰法转为用 - 分隔的字符串（如 boxSizing 转换为 box-sizing）\n * @param string\n */\nexport const toKebabCase = (string) => {\n    if (!string) {\n        return string;\n    }\n    return string\n        .replace(/^./, string[0].toLowerCase()) // 首字母转小写\n        .replace(/[A-Z]/g, (replacer) => {\n        return '-' + replacer.toLowerCase();\n    });\n};\n/**\n * 始终返回 false 的函数\n */\nexport const returnFalse = () => {\n    return false;\n};\n/**\n * 始终返回 true 的函数\n */\nexport const returnTrue = () => {\n    return true;\n};\n/**\n * 遍历数组\n * @param target\n * @param callback\n */\nexport const eachArray = (target, callback) => {\n    for (let i = 0; i < target.length; i += 1) {\n        if (callback.call(target[i], target[i], i) === false) {\n            return target;\n        }\n    }\n    return target;\n};\n/**\n * 遍历对象\n * @param target\n * @param callback\n */\nexport const eachObject = (target, callback) => {\n    const keys = Object.keys(target);\n    for (let i = 0; i < keys.length; i += 1) {\n        const key = keys[i];\n        if (callback.call(target[key], key, target[key]) === false) {\n            return target;\n        }\n    }\n    return target;\n};\n", "/**\n * SSR Window 5.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2025, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: June 27, 2025\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    const noExtend = ['__proto__', 'constructor', 'prototype'];\n    Object.keys(src)\n        .filter((key) => noExtend.indexOf(key) < 0)\n        .forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n", "import { eachArray } from './helper.js';\n/**\n * 为了使用模块扩充，这里不能使用默认导出\n */\nexport class JQ {\n    constructor(arr) {\n        this.length = 0;\n        if (!arr) {\n            return this;\n        }\n        eachArray(arr, (item, i) => {\n            this[i] = item;\n        });\n        this.length = arr.length;\n        return this;\n    }\n}\n", "import { getDocument } from 'ssr-window';\n/**\n * DOM 是否已加载完成\n *\n * 在 Web Components 中操作组件外部的 DOM、或组件中的 slot 的 DOM 时，必须先判断 DOM 是否已加载完成。\n */\nexport const isDomReady = (document = getDocument()) => {\n    return /complete|interactive/.test(document.readyState);\n};\nexport const createElement = (tagName) => {\n    const document = getDocument();\n    return document.createElement(tagName);\n};\nexport const appendChild = (element, child) => {\n    return element.appendChild(child);\n};\nexport const removeChild = (element) => {\n    return element.parentNode ? element.parentNode.removeChild(element) : element;\n};\n/**\n * 获取子节点组成的数组\n * @param target\n * @param parent\n */\nexport const getChildNodesArray = (target, parent) => {\n    const tempParent = createElement(parent);\n    tempParent.innerHTML = target;\n    return [].slice.call(tempParent.childNodes);\n};\n", "import { getDocument } from 'ssr-window';\nimport { JQ } from './shared/core.js';\nimport { getChildNodesArray, isDomReady } from './shared/dom.js';\nimport { isFunction, isNode, isString, isArrayLike, eachObject, } from './shared/helper.js';\nconst get$ = () => {\n    const $ = function (selector) {\n        if (!selector) {\n            return new JQ();\n        }\n        // JQ\n        if (selector instanceof JQ) {\n            return selector;\n        }\n        // function\n        if (isFunction(selector)) {\n            const document = getDocument();\n            if (isDomReady(document)) {\n                selector.call(document, $);\n            }\n            else {\n                document.addEventListener('DOMContentLoaded', () => selector.call(document, $), { once: true });\n            }\n            return new JQ([document]);\n        }\n        // String\n        if (isString(selector)) {\n            const html = selector.trim();\n            // 根据 HTML 字符串创建 JQ 对象\n            if (html.startsWith('<') && html.endsWith('>')) {\n                let toCreate = 'div';\n                const tags = {\n                    li: 'ul',\n                    tr: 'tbody',\n                    td: 'tr',\n                    th: 'tr',\n                    tbody: 'table',\n                    option: 'select',\n                };\n                eachObject(tags, (childTag, parentTag) => {\n                    if (html.startsWith(`<${childTag}`)) {\n                        toCreate = parentTag;\n                        return false;\n                    }\n                    return;\n                });\n                return new JQ(getChildNodesArray(html, toCreate));\n            }\n            const document = getDocument();\n            // 根据 CSS 选择器创建 JQ 对象\n            return new JQ(document.querySelectorAll(selector));\n        }\n        if (isArrayLike(selector) && !isNode(selector)) {\n            return new JQ(selector);\n        }\n        return new JQ([selector]);\n    };\n    $.fn = JQ.prototype;\n    return $;\n};\nexport const $ = get$();\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {\n  type PropertyDeclaration,\n  type ReactiveElement,\n  defaultConverter,\n  notEqual,\n} from '../reactive-element.js';\nimport type {Interface} from './base.js';\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  globalThis.litIssuedWarnings ??= new Set();\n\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (\n      !globalThis.litIssuedWarnings!.has(warning) &&\n      !globalThis.litIssuedWarnings!.has(code)\n    ) {\n      console.warn(warning);\n      globalThis.litIssuedWarnings!.add(warning);\n    }\n  };\n}\n\n// Overloads for property decorator so that TypeScript can infer the correct\n// return type when a decorator is used as an accessor decorator or a setter\n// decorator.\nexport type PropertyDecorator = {\n  // accessor decorator signature\n  <C extends Interface<ReactiveElement>, V>(\n    target: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n\n  // setter decorator signature\n  <C extends Interface<ReactiveElement>, V>(\n    target: (value: V) => void,\n    context: ClassSetterDecoratorContext<C, V>\n  ): (this: C, value: V) => void;\n\n  // legacy decorator signature\n  (\n    protoOrDescriptor: Object,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): any;\n};\n\nconst legacyProperty = (\n  options: PropertyDeclaration | undefined,\n  proto: Object,\n  name: PropertyKey\n) => {\n  const hasOwnProperty = proto.hasOwnProperty(name);\n  (proto.constructor as typeof ReactiveElement).createProperty(name, options);\n  // For accessors (which have a descriptor on the prototype) we need to\n  // return a descriptor, otherwise TypeScript overwrites the descriptor we\n  // define in createProperty() with the original descriptor. We don't do this\n  // for fields, which don't have a descriptor, because this could overwrite\n  // descriptor defined by other decorators.\n  return hasOwnProperty\n    ? Object.getOwnPropertyDescriptor(proto, name)\n    : undefined;\n};\n\n// This is duplicated from a similar variable in reactive-element.ts, but\n// actually makes sense to have this default defined with the decorator, so\n// that different decorators could have different defaults.\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n// Temporary type, until google3 is on TypeScript 5.2\ntype StandardPropertyContext<C, V> = (\n  | ClassAccessorDecoratorContext<C, V>\n  | ClassSetterDecoratorContext<C, V>\n) & {metadata: object};\n\n/**\n * Wraps a class accessor or setter so that `requestUpdate()` is called with the\n * property name and old value when the accessor is set.\n */\nexport const standardProperty = <C extends Interface<ReactiveElement>, V>(\n  options: PropertyDeclaration = defaultPropertyDeclaration,\n  target: ClassAccessorDecoratorTarget<C, V> | ((value: V) => void),\n  context: StandardPropertyContext<C, V>\n): ClassAccessorDecoratorResult<C, V> | ((this: C, value: V) => void) => {\n  const {kind, metadata} = context;\n\n  if (DEV_MODE && metadata == null) {\n    issueWarning(\n      'missing-class-metadata',\n      `The class ${target} is missing decorator metadata. This ` +\n        `could mean that you're using a compiler that supports decorators ` +\n        `but doesn't support decorator metadata, such as TypeScript 5.1. ` +\n        `Please update your compiler.`\n    );\n  }\n\n  // Store the property options\n  let properties = globalThis.litPropertyMetadata.get(metadata);\n  if (properties === undefined) {\n    globalThis.litPropertyMetadata.set(metadata, (properties = new Map()));\n  }\n  if (kind === 'setter') {\n    options = Object.create(options);\n    options.wrapped = true;\n  }\n  properties.set(context.name, options);\n\n  if (kind === 'accessor') {\n    // Standard decorators cannot dynamically modify the class, so we can't\n    // replace a field with accessors. The user must use the new `accessor`\n    // keyword instead.\n    const {name} = context;\n    return {\n      set(this: ReactiveElement, v: V) {\n        const oldValue = (\n          target as ClassAccessorDecoratorTarget<C, V>\n        ).get.call(this as unknown as C);\n        (target as ClassAccessorDecoratorTarget<C, V>).set.call(\n          this as unknown as C,\n          v\n        );\n        this.requestUpdate(name, oldValue, options);\n      },\n      init(this: ReactiveElement, v: V): V {\n        if (v !== undefined) {\n          this._$changeProperty(name, undefined, options, v);\n        }\n        return v;\n      },\n    } as unknown as ClassAccessorDecoratorResult<C, V>;\n  } else if (kind === 'setter') {\n    const {name} = context;\n    return function (this: ReactiveElement, value: V) {\n      const oldValue = this[name as keyof ReactiveElement];\n      (target as (value: V) => void).call(this, value);\n      this.requestUpdate(name, oldValue, options);\n    } as unknown as (this: C, value: V) => void;\n  }\n  throw new Error(`Unsupported decorator location: ${kind}`);\n};\n\n/**\n * A class field or accessor decorator which creates a reactive property that\n * reflects a corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration): PropertyDecorator {\n  return <C extends Interface<ReactiveElement>, V>(\n    protoOrTarget:\n      | object\n      | ClassAccessorDecoratorTarget<C, V>\n      | ((value: V) => void),\n    nameOrContext:\n      | PropertyKey\n      | ClassAccessorDecoratorContext<C, V>\n      | ClassSetterDecoratorContext<C, V>\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): any => {\n    return (\n      typeof nameOrContext === 'object'\n        ? standardProperty<C, V>(\n            options,\n            protoOrTarget as\n              | ClassAccessorDecoratorTarget<C, V>\n              | ((value: V) => void),\n            nameOrContext as StandardPropertyContext<C, V>\n          )\n        : legacyProperty(\n            options,\n            protoOrTarget as Object,\n            nameOrContext as PropertyKey\n          )\n    ) as PropertyDecorator;\n  };\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {property} from './property.js';\n\nexport interface StateDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * @deprecated use StateDeclaration\n */\nexport type InternalPropertyDeclaration<Type = unknown> =\n  StateDeclaration<Type>;\n\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function state(options?: StateDeclaration) {\n  return property({\n    ...options,\n    // Add both `state` and `attribute` because we found a third party\n    // controller that is keying off of PropertyOptions.state to determine\n    // whether a field is a private internal property or not.\n    state: true,\n    attribute: false,\n  });\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Generates a public interface type that removes private and protected fields.\n * This allows accepting otherwise incompatible versions of the type (e.g. from\n * multiple copies of the same package in `node_modules`).\n */\nexport type Interface<T> = {\n  [K in keyof T]: T[K];\n};\n\nexport type Constructor<T> = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  new (...args: any[]): T;\n};\n\n/**\n * Wraps up a few best practices when returning a property descriptor from a\n * decorator.\n *\n * Marks the defined property as configurable, and enumerable, and handles\n * the case where we have a busted Reflect.decorate zombiefill (e.g. in Angular\n * apps).\n *\n * @internal\n */\nexport const desc = (\n  obj: object,\n  name: PropertyKey | ClassAccessorDecoratorContext<unknown, unknown>,\n  descriptor: PropertyDescriptor\n) => {\n  // For backwards compatibility, we keep them configurable and enumerable.\n  descriptor.configurable = true;\n  descriptor.enumerable = true;\n  if (\n    // We check for Reflect.decorate each time, in case the zombiefill\n    // is applied via lazy loading some Angular code.\n    (Reflect as typeof Reflect & {decorate?: unknown}).decorate &&\n    typeof name !== 'object'\n  ) {\n    // If we're called as a legacy decorator, and Reflect.decorate is present\n    // then we have no guarantees that the returned descriptor will be\n    // defined on the class, so we must apply it directly ourselves.\n\n    Object.defineProperty(obj, name, descriptor);\n  }\n  return descriptor;\n};\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport type {ReactiveElement} from '../reactive-element.js';\nimport type {QueryAssignedNodesOptions} from './query-assigned-nodes.js';\nimport {desc, type Interface} from './base.js';\n\nexport type QueryAssignedElementsDecorator = {\n  // legacy\n  (\n    proto: Interface<ReactiveElement>,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any;\n\n  // standard\n  <C extends Interface<ReactiveElement>, V extends Array<Element>>(\n    value: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n};\n\n/**\n * Options for the {@linkcode queryAssignedElements} decorator. Extends the\n * options that can be passed into\n * [HTMLSlotElement.assignedElements](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n */\nexport interface QueryAssignedElementsOptions\n  extends QueryAssignedNodesOptions {\n  /**\n   * CSS selector used to filter the elements returned. For example, a selector\n   * of `\".item\"` will only include elements with the `item` class.\n   */\n  selector?: string;\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedElements` of the given `slot`. Provides a declarative\n * way to use\n * [`HTMLSlotElement.assignedElements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n *\n * Can be passed an optional {@linkcode QueryAssignedElementsOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedElements({ slot: 'list' })\n *   listItems!: Array<HTMLElement>;\n *   @queryAssignedElements()\n *   unnamedSlotEls!: Array<HTMLElement>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *       <slot></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note, the type of this property should be annotated as `Array<HTMLElement>`.\n *\n * @category Decorator\n */\nexport function queryAssignedElements(\n  options?: QueryAssignedElementsOptions\n): QueryAssignedElementsDecorator {\n  return (<V extends Array<Element>>(\n    obj: object,\n    name: PropertyKey | ClassAccessorDecoratorContext<unknown, unknown>\n  ) => {\n    const {slot, selector} = options ?? {};\n    const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n    return desc(obj, name, {\n      get(this: ReactiveElement): V {\n        const slotEl =\n          this.renderRoot?.querySelector<HTMLSlotElement>(slotSelector);\n        const elements = slotEl?.assignedElements(options) ?? [];\n        return (\n          selector === undefined\n            ? elements\n            : elements.filter((node) => node.matches(selector))\n        ) as V;\n      },\n    });\n  }) as QueryAssignedElementsDecorator;\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport type {ReactiveElement} from '../reactive-element.js';\nimport {desc, type Interface} from './base.js';\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  globalThis.litIssuedWarnings ??= new Set();\n\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (\n      !globalThis.litIssuedWarnings!.has(warning) &&\n      !globalThis.litIssuedWarnings!.has(code)\n    ) {\n      console.warn(warning);\n      globalThis.litIssuedWarnings!.add(warning);\n    }\n  };\n}\n\nexport type QueryDecorator = {\n  // legacy\n  (\n    proto: Interface<ReactiveElement>,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any;\n\n  // standard\n  <C extends Interface<ReactiveElement>, V extends Element | null>(\n    value: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n};\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean): QueryDecorator {\n  return (<C extends Interface<ReactiveElement>, V extends Element | null>(\n    protoOrTarget: ClassAccessorDecoratorTarget<C, V>,\n    nameOrContext: PropertyKey | ClassAccessorDecoratorContext<C, V>,\n    descriptor?: PropertyDescriptor\n  ) => {\n    const doQuery = (el: Interface<ReactiveElement>): V => {\n      const result = (el.renderRoot?.querySelector(selector) ?? null) as V;\n      if (DEV_MODE && result === null && cache && !el.hasUpdated) {\n        const name =\n          typeof nameOrContext === 'object'\n            ? nameOrContext.name\n            : nameOrContext;\n        issueWarning(\n          '',\n          `@query'd field ${JSON.stringify(String(name))} with the 'cache' ` +\n            `flag set for selector '${selector}' has been accessed before ` +\n            `the first update and returned null. This is expected if the ` +\n            `renderRoot tree has not been provided beforehand (e.g. via ` +\n            `Declarative Shadow DOM). Therefore the value hasn't been cached.`\n        );\n      }\n      // TODO: if we want to allow users to assert that the query will never\n      // return null, we need a new option and to throw here if the result\n      // is null.\n      return result;\n    };\n    if (cache) {\n      // Accessors to wrap from either:\n      //   1. The decorator target, in the case of standard decorators\n      //   2. The property descriptor, in the case of experimental decorators\n      //      on auto-accessors.\n      //   3. Functions that access our own cache-key property on the instance,\n      //      in the case of experimental decorators on fields.\n      const {get, set} =\n        typeof nameOrContext === 'object'\n          ? protoOrTarget\n          : descriptor ??\n            (() => {\n              const key = DEV_MODE\n                ? Symbol(`${String(nameOrContext)} (@query() cache)`)\n                : Symbol();\n              type WithCache = ReactiveElement & {\n                [key: symbol]: Element | null;\n              };\n              return {\n                get() {\n                  return (this as WithCache)[key];\n                },\n                set(v) {\n                  (this as WithCache)[key] = v;\n                },\n              };\n            })();\n      return desc(protoOrTarget, nameOrContext, {\n        get(this: ReactiveElement): V {\n          let result: V = get!.call(this);\n          if (result === undefined) {\n            result = doQuery(this);\n            if (result !== null || this.hasUpdated) {\n              set!.call(this, result);\n            }\n          }\n          return result;\n        },\n      });\n    } else {\n      // This object works as the return type for both standard and\n      // experimental decorators.\n      return desc(protoOrTarget, nameOrContext, {\n        get(this: ReactiveElement) {\n          return doQuery(this);\n        },\n      });\n    }\n  }) as QueryDecorator;\n}\n", "import { $ } from '../$.js';\nimport { eachArray } from '../shared/helper.js';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n$.fn.each = function (callback) {\n    return eachArray(this, (value, index) => {\n        return callback.call(value, index, value);\n    });\n};\n", "import { isNull } from './helper.js';\n/**\n * 获取属性值\n * @param element\n * @param key 属性键名\n * @param defaultValue 当 element.getAttribute 为 null 时，默认返回 undefined\n */\nexport const getAttribute = (element, key, defaultValue) => {\n    const value = element.getAttribute(key);\n    return isNull(value) ? defaultValue : value;\n};\n/**\n * 移除属性\n * @param element\n * @param key 属性键名\n */\nexport const removeAttribute = (element, key) => {\n    element.removeAttribute(key);\n};\n/**\n * 设置属性值\n * @param element\n * @param key 属性键名\n * @param value 值，若为 null，则调用 removeAttribute\n */\nexport const setAttribute = (element, key, value) => {\n    if (isNull(value)) {\n        removeAttribute(element, key);\n    }\n    else {\n        element.setAttribute(key, value);\n    }\n};\n", "import { getWindow } from 'ssr-window';\nimport { toKebabCase } from './helper.js';\n/**\n * 获取元素的样式值\n * @param element\n * @param name\n */\nexport const getComputedStyleValue = (element, name) => {\n    const window = getWindow();\n    return window.getComputedStyle(element).getPropertyValue(toKebabCase(name));\n};\n/**\n * 检查元素的 box-sizing 是否是 border-box\n * @param element\n */\nexport const isBorderBox = (element) => {\n    return getComputedStyleValue(element, 'box-sizing') === 'border-box';\n};\n/**\n * 获取元素的 padding, border, margin 宽度（两侧宽度的和，单位为px）\n * @param element\n * @param direction\n * @param extra\n */\nexport const getExtraWidth = (element, direction, extra) => {\n    const position = direction === 'width'\n        ? ['Left', 'Right']\n        : ['Top', 'Bottom'];\n    return [0, 1].reduce((prev, _, index) => {\n        let prop = extra + position[index];\n        if (extra === 'border') {\n            prop += 'Width';\n        }\n        return prev + parseFloat(getComputedStyleValue(element, prop) || '0');\n    }, 0);\n};\n/**\n * 获取元素的样式值，对 width 和 height 进行过处理\n * @param element\n * @param name\n */\nexport const getStyle = (element, name) => {\n    // width、height 属性使用 getComputedStyle 得到的值不准确，需要使用 getBoundingClientRect 获取\n    if (name === 'width' || name === 'height') {\n        const valueNumber = element.getBoundingClientRect()[name];\n        if (isBorderBox(element)) {\n            return `${valueNumber}px`;\n        }\n        return `${valueNumber -\n            getExtraWidth(element, name, 'border') -\n            getExtraWidth(element, name, 'padding')}px`;\n    }\n    return getComputedStyleValue(element, name);\n};\n/**\n * 数值单位的 CSS 属性\n */\nexport const cssNumber = [\n    'animation-iteration-count',\n    'column-count',\n    'fill-opacity',\n    'flex-grow',\n    'flex-shrink',\n    'font-weight',\n    'grid-area',\n    'grid-column',\n    'grid-column-end',\n    'grid-column-start',\n    'grid-row',\n    'grid-row-end',\n    'grid-row-start',\n    'line-height',\n    'opacity',\n    'order',\n    'orphans',\n    'widows',\n    'z-index',\n    'zoom',\n];\n", "import { $ } from '../$.js';\nimport { getAttribute, setAttribute } from '../shared/attributes.js';\nimport { getStyle, cssNumber } from '../shared/css.js';\nimport { isElement, isFunction, isNumber, isUndefined, isObjectLike, eachArray, eachObject, toKebabCase, } from '../shared/helper.js';\nimport './each.js';\neachArray(['attr', 'prop', 'css'], (name, nameIndex) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const set = (element, key, value) => {\n        // 值为 undefined 时，不修改\n        if (isUndefined(value)) {\n            return;\n        }\n        // attr\n        if (nameIndex === 0) {\n            return setAttribute(element, key, value);\n        }\n        // prop\n        if (nameIndex === 1) {\n            // @ts-ignore\n            element[key] = value;\n            return;\n        }\n        // css\n        key = toKebabCase(key);\n        // 获取默认后缀。以 -- 开头的为 CSS 变量，不添加后缀；值为数值类型的不添加后缀\n        const getSuffix = () => key.startsWith('--') || cssNumber.includes(key) ? '' : 'px';\n        element.style.setProperty(key, isNumber(value) ? `${value}${getSuffix()}` : value);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const get = (element, key) => {\n        // attr\n        if (nameIndex === 0) {\n            // 属性不存在时，原生 getAttribute 方法返回 null，而 jquery 返回 undefined。这里和 jquery 保持一致\n            return getAttribute(element, key);\n        }\n        // prop\n        if (nameIndex === 1) {\n            // @ts-ignore\n            return element[key];\n        }\n        return getStyle(element, key);\n    };\n    $.fn[name] = function (key, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    value) {\n        if (isObjectLike(key)) {\n            eachObject(key, (k, v) => {\n                // @ts-ignore\n                this[name](k, v);\n            });\n            return this;\n        }\n        if (arguments.length === 1) {\n            const element = this[0];\n            return isElement(element) ? get(element, key) : undefined;\n        }\n        return this.each((i, element) => {\n            set(element, key, isFunction(value) ? value.call(element, i, get(element, key)) : value);\n        });\n    };\n});\n", "import { getDocument } from 'ssr-window';\nimport { $ } from '../$.js';\nimport { isBorderBox, getExtraWidth, getComputedStyleValue, } from '../shared/css.js';\nimport { isBoolean, isString, isDocument, isFunction, isWindow, toElement, eachArray, } from '../shared/helper.js';\nimport './css.js';\nimport './each.js';\n/**\n * 值上面的 padding、border、margin 处理\n * @param element\n * @param name\n * @param value\n * @param funcIndex\n * @param includeMargin\n * @param multiply\n */\nconst handleExtraWidth = (element, name, value, funcIndex, includeMargin, multiply) => {\n    // 获取元素的 padding, border, margin 宽度（两侧宽度的和）\n    const getExtraWidthValue = (extra) => {\n        return (getExtraWidth(element, name.toLowerCase(), extra) *\n            multiply);\n    };\n    if (funcIndex === 2 && includeMargin) {\n        value += getExtraWidthValue('margin');\n    }\n    if (isBorderBox(element)) {\n        if (funcIndex === 0) {\n            value -= getExtraWidthValue('border');\n        }\n        if (funcIndex === 1) {\n            value -= getExtraWidthValue('border');\n            value -= getExtraWidthValue('padding');\n        }\n    }\n    else {\n        if (funcIndex === 0) {\n            value += getExtraWidthValue('padding');\n        }\n        if (funcIndex === 2) {\n            value += getExtraWidthValue('border');\n            value += getExtraWidthValue('padding');\n        }\n    }\n    return value;\n};\n/**\n * 获取元素的样式值\n * @param element\n * @param name\n * @param funcIndex 0: innerWidth, innerHeight; 1: width, height; 2: outerWidth, outerHeight\n * @param includeMargin\n */\nconst get = (element, name, funcIndex, includeMargin) => {\n    const document = getDocument();\n    const clientProp = `client${name}`;\n    const scrollProp = `scroll${name}`;\n    const offsetProp = `offset${name}`;\n    const innerProp = `inner${name}`;\n    // $(window).width()\n    if (isWindow(element)) {\n        // outerWidth, outerHeight 需要包含滚动条的宽度\n        return funcIndex === 2\n            ? element[innerProp]\n            : toElement(document)[clientProp];\n    }\n    // $(document).width()\n    if (isDocument(element)) {\n        const doc = toElement(element);\n        return Math.max(\n        // @ts-ignore\n        element.body[scrollProp], doc[scrollProp], \n        // @ts-ignore\n        element.body[offsetProp], doc[offsetProp], doc[clientProp]);\n    }\n    const value = parseFloat(getComputedStyleValue(element, name.toLowerCase()) || '0');\n    return handleExtraWidth(element, name, value, funcIndex, includeMargin, 1);\n};\n/**\n * 设置元素的样式值\n * @param element\n * @param elementIndex\n * @param name\n * @param funcIndex 0: innerWidth, innerHeight; 1: width, height; 2: outerWidth, outerHeight\n * @param includeMargin\n * @param value\n */\nconst set = (element, elementIndex, name, funcIndex, includeMargin, value) => {\n    let computedValue = isFunction(value)\n        ? value.call(element, elementIndex, get(element, name, funcIndex, includeMargin))\n        : value;\n    if (computedValue == null) {\n        return;\n    }\n    const $element = $(element);\n    const dimension = name.toLowerCase();\n    // 特殊的值，不需要计算 padding、border、margin\n    if (isString(computedValue) &&\n        ['auto', 'inherit', ''].includes(computedValue)) {\n        $element.css(dimension, computedValue);\n        return;\n    }\n    // 其他值保留原始单位。注意：如果不使用 px 作为单位，则算出的值一般是不准确的\n    const suffix = computedValue.toString().replace(/\\b[0-9.]*/, '');\n    const numerical = parseFloat(computedValue);\n    computedValue =\n        handleExtraWidth(element, name, numerical, funcIndex, includeMargin, -1) +\n            (suffix || 'px');\n    $element.css(dimension, computedValue);\n};\neachArray(['Width', 'Height'], (name) => {\n    eachArray([`inner${name}`, name.toLowerCase(), `outer${name}`], (funcName, funcIndex) => {\n        $.fn[funcName] = function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        margin, \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        value) {\n            // 是否是赋值操作\n            const isSet = arguments.length && (funcIndex < 2 || !isBoolean(margin));\n            const includeMargin = margin === true || value === true;\n            // 获取第一个元素的值\n            if (!isSet) {\n                return this.length\n                    ? get(this[0], name, funcIndex, includeMargin)\n                    : undefined;\n            }\n            // 设置每个元素的值\n            return this.each((index, element) => {\n                return set(element, index, name, funcIndex, includeMargin, margin);\n            });\n        };\n    });\n});\n", "/**\n * 过滤掉数组中的重复元素\n * @param arr 数组\n * @example\n```js\nunique([1, 2, 12, 3, 2, 1, 2, 1, 1]);\n// [1, 2, 12, 3]\n```\n */\nexport const unique = (arr) => {\n    return [...new Set(arr)];\n};\n", "import { getDocument } from 'ssr-window';\nimport { unique } from '@mdui/jq/functions/unique.js';\nimport { isDomReady } from '@mdui/jq/shared/dom.js';\n/**\n * 判断组件是否定义完成\n *\n * 如果需要在组件操作或读取组件外部、或组件 slot 中的原生 DOM 时，则需要在 DOM 就绪时，才能认为组件定义完成\n * 如果组件需要和其他组件配合使用，则需要等待其他组件定义完成后，才能认为组件定义完成\n */\nexport class DefinedController {\n    constructor(host, options) {\n        /**\n         * 组件是否已定义完成\n         */\n        this.defined = false;\n        (this.host = host).addController(this);\n        this.relatedElements = options.relatedElements;\n        this.needDomReady = options.needDomReady || !!options.relatedElements;\n        this.onSlotChange = this.onSlotChange.bind(this);\n    }\n    hostConnected() {\n        this.host.shadowRoot.addEventListener('slotchange', this.onSlotChange);\n    }\n    hostDisconnected() {\n        this.host.shadowRoot.removeEventListener('slotchange', this.onSlotChange);\n    }\n    /**\n     * 判断组件是否定义完成\n     */\n    isDefined() {\n        if (this.defined) {\n            return true;\n        }\n        this.defined =\n            (!this.needDomReady || isDomReady()) &&\n                !this.getUndefinedLocalNames().length;\n        return this.defined;\n    }\n    /**\n     * 在组件定义完成后，promise 被 resolve\n     */\n    async whenDefined() {\n        if (this.defined) {\n            return Promise.resolve();\n        }\n        const document = getDocument();\n        if (this.needDomReady && !isDomReady(document)) {\n            await new Promise((resolve) => {\n                document.addEventListener('DOMContentLoaded', () => resolve(), {\n                    once: true,\n                });\n            });\n        }\n        const undefinedLocalNames = this.getUndefinedLocalNames();\n        if (undefinedLocalNames.length) {\n            const promises = [];\n            undefinedLocalNames.forEach((localName) => {\n                promises.push(customElements.whenDefined(localName));\n            });\n            await Promise.all(promises);\n        }\n        this.defined = true;\n        return;\n    }\n    /**\n     * slot 中的未完成定义的相关 Web components 组件的 CSS 选择器\n     */\n    getScopeLocalNameSelector() {\n        const localNames = this.relatedElements;\n        if (!localNames) {\n            return null;\n        }\n        if (Array.isArray(localNames)) {\n            return localNames\n                .map((localName) => `${localName}:not(:defined)`)\n                .join(',');\n        }\n        return Object.keys(localNames)\n            .filter((localName) => !localNames[localName])\n            .map((localName) => `${localName}:not(:defined)`)\n            .join(',');\n    }\n    /**\n     * 整个页面中的未完成定义的相关 Web components 组件的 CSS 选择器\n     */\n    getGlobalLocalNameSelector() {\n        const localNames = this.relatedElements;\n        if (!localNames || Array.isArray(localNames)) {\n            return null;\n        }\n        return Object.keys(localNames)\n            .filter((localName) => localNames[localName])\n            .map((localName) => `${localName}:not(:defined)`)\n            .join(',');\n    }\n    /**\n     * 获取未完成定义的相关 Web components 组件名\n     */\n    getUndefinedLocalNames() {\n        const scopeSelector = this.getScopeLocalNameSelector();\n        const globalSelector = this.getGlobalLocalNameSelector();\n        const undefinedScopeElements = scopeSelector\n            ? [...this.host.querySelectorAll(scopeSelector)]\n            : [];\n        const undefinedGlobalElements = globalSelector\n            ? [...getDocument().querySelectorAll(globalSelector)]\n            : [];\n        const localNames = [\n            ...undefinedScopeElements,\n            ...undefinedGlobalElements,\n        ].map((element) => element.localName);\n        return unique(localNames);\n    }\n    /**\n     * slot 变更时，若 slot 中包含未完成定义的相关 Web components 组件，则组件未定义完成\n     */\n    onSlotChange() {\n        const selector = this.getScopeLocalNameSelector();\n        if (selector) {\n            const undefinedElements = this.host.querySelectorAll(selector);\n            if (undefinedElements.length) {\n                this.defined = false;\n            }\n        }\n    }\n}\n", "import { $ } from '@mdui/jq/$.js';\nimport { isDomReady } from '@mdui/jq/shared/dom.js';\n/**\n * 检查指定的 slot 是否存在\n */\nexport class HasSlotController {\n    constructor(host, ...slotNames) {\n        this.slotNames = [];\n        (this.host = host).addController(this);\n        this.slotNames = slotNames;\n        this.onSlotChange = this.onSlotChange.bind(this);\n    }\n    hostConnected() {\n        this.host.shadowRoot.addEventListener('slotchange', this.onSlotChange);\n        if (!isDomReady()) {\n            $(() => {\n                this.host.requestUpdate();\n            });\n        }\n    }\n    hostDisconnected() {\n        this.host.shadowRoot.removeEventListener('slotchange', this.onSlotChange);\n    }\n    test(slotName) {\n        return slotName === '[default]'\n            ? this.hasDefaultSlot()\n            : this.hasNamedSlot(slotName);\n    }\n    hasDefaultSlot() {\n        return [...this.host.childNodes].some((node) => {\n            if (node.nodeType === node.TEXT_NODE && node.textContent.trim() !== '') {\n                return true;\n            }\n            if (node.nodeType === node.ELEMENT_NODE) {\n                const el = node;\n                if (!el.hasAttribute('slot')) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    }\n    hasNamedSlot(name) {\n        return this.host.querySelector(`:scope > [slot=\"${name}\"]`) !== null;\n    }\n    onSlotChange(event) {\n        const slot = event.target;\n        if ((this.slotNames.includes('[default]') && !slot.name) ||\n            (slot.name && this.slotNames.includes(slot.name))) {\n            this.host.requestUpdate();\n        }\n    }\n}\n", "/**\n * 在原生的 HTML 中，布尔属性只要添加了属性名，不论属性值设置成什么，属性值都是 true\n * 但这里设置了 attr=\"false\" 时，要把属性设置为 false\n *\n * 原因是：\n * 在 vue3 中，通过 :attr=\"value\" 设置属性时，vue 会优先从 DOM 属性中寻找是否存在 attr 属性名，\n * 若存在，则设置对应的 DOM 属性，否则设置对应的 attribute 属性\n * 但在 vue 的服务端渲染（ssr）时，不存在 DOM 对象，所以会把 attribute 属性设置成 attr=\"true\" 或 attr=\"false\"\n * 所以在 attribute 属性 attr=\"false\" 时，需要把属性值转换为布尔值 false\n *\n * 在 CSS 中选择布尔属性时，必须排除掉属性值为 false 的情况。i 表示不区分大小写。仅 public 属性需要这样处理，private 和 protected 属性不需要\n * 例如：:host([hide]:not([hide=\"false\" i])) { ... }\n *\n * 这段代码不能封装成函数，否则生成 custom-elements.json 会识别不了\n * 这段注释仅在这里写一次，其他地方不再重复\n *\n * @see https://v3-migration.vuejs.org/zh/breaking-changes/attribute-coercion.html\n */\nexport const booleanConverter = (value) => {\n    return value !== null && value.toLowerCase() !== 'false';\n};\n", "import { css } from 'lit';\nexport const componentStyle = css `:host{box-sizing:border-box}:host *,:host ::after,:host ::before{box-sizing:inherit}:host :focus,:host :focus-visible,:host(:focus),:host(:focus-visible){outline:0}[hidden]{display:none!important}`;\n", "import { LitElement } from 'lit';\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport class MduiElement extends LitElement {\n    /**\n     * 触发自定义事件。若返回 false，表示事件被取消\n     * @param type\n     * @param options 通常只用到 cancelable 和 detail；bubbles、composed 统一不用\n     */\n    emit(type, options) {\n        const event = new CustomEvent(type, Object.assign({\n            bubbles: true,\n            cancelable: false,\n            composed: true,\n            detail: {},\n        }, options));\n        return this.dispatchEvent(event);\n    }\n}\n", "import { $ } from '../$.js';\nimport { isDocument, isFunction, isString, isWindow, } from '../shared/helper.js';\nimport './each.js';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n$.fn.is = function (selector) {\n    let isMatched = false;\n    if (isFunction(selector)) {\n        this.each((index, element) => {\n            if (selector.call(element, index, element)) {\n                isMatched = true;\n            }\n        });\n        return isMatched;\n    }\n    if (isString(selector)) {\n        this.each((_, element) => {\n            if (isDocument(element) || isWindow(element)) {\n                return;\n            }\n            if (element.matches.call(element, selector)) {\n                isMatched = true;\n            }\n        });\n        return isMatched;\n    }\n    const $compareWith = $(selector);\n    this.each((_, element) => {\n        $compareWith.each((_, compare) => {\n            if (element === compare) {\n                isMatched = true;\n            }\n        });\n    });\n    return isMatched;\n};\n", "import { $ } from '../$.js';\nimport { unique } from '../functions/unique.js';\nimport { JQ } from '../shared/core.js';\nimport { isElement, eachArray } from '../shared/helper.js';\nimport './each.js';\nimport './is.js';\n$.fn.children = function (selector) {\n    const children = [];\n    this.each((_, element) => {\n        eachArray(element.childNodes, (childNode) => {\n            if (!isElement(childNode)) {\n                return;\n            }\n            if (!selector || $(childNode).is(selector)) {\n                children.push(childNode);\n            }\n        });\n    });\n    return new JQ(unique(children));\n};\n", "import { $ } from '../$.js';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n$.fn.get = function (index) {\n    return index === undefined\n        ? [].slice.call(this)\n        : this[index >= 0 ? index : index + this.length];\n};\n"],
  "mappings": "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",
  "names": ["CustomEvent", "document", "$", "document", "DEV_MODE", "issueWarning", "window", "set", "get", "document", "document", "_"]
}
