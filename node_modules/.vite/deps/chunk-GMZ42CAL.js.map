{
  "version": 3,
  "sources": ["../../mdui/components/layout/helper.js", "../../mdui/components/layout/layout-item-base.js", "../../mdui/components/navigation-rail/navigation-rail-style.js", "../../mdui/components/navigation-rail/navigation-rail.js"],
  "sourcesContent": ["import { $ } from '@mdui/jq/$.js';\nimport '@mdui/jq/methods/children.js';\nimport '@mdui/jq/methods/css.js';\nimport '@mdui/jq/methods/get.js';\nimport { isNodeName } from '@mdui/jq/shared/helper.js';\nimport { observeResize } from '@mdui/shared/helpers/observeResize.js';\nexport class LayoutManager {\n    constructor() {\n        this.states = [];\n    }\n    /**\n     * 注册 `<mdui-layout-main>`\n     */\n    registerMain(element) {\n        this.$main = $(element);\n    }\n    /**\n     * 取消注册 `<mdui-layout-main>`\n     */\n    unregisterMain() {\n        this.$main = undefined;\n    }\n    /**\n     * 注册新的 `<mdui-layout-item>`\n     */\n    registerItem(element) {\n        const state = { element };\n        this.states.push(state);\n        // 监听元素尺寸变化\n        state.observeResize = observeResize(state.element, () => {\n            this.updateLayout(state.element, {\n                width: this.isNoWidth(state) ? 0 : undefined,\n            });\n        });\n        this.items = undefined;\n        this.resort();\n        // 从头更新布局\n        this.updateLayout();\n    }\n    /**\n     * 取消注册 `<mdui-layout-item>`\n     */\n    unregisterItem(element) {\n        const index = this.states.findIndex((item) => item.element === element);\n        if (index < 0) {\n            return;\n        }\n        // 取消监听尺寸变化\n        const item = this.states[index];\n        item.observeResize?.unobserve();\n        this.items = undefined;\n        // 移除一个元素，并从下一个元素开始更新\n        this.states.splice(index, 1);\n        if (this.states[index]) {\n            this.updateLayout(this.states[index].element);\n        }\n    }\n    /**\n     * 获取所有 `<mdui-layout-item>` 元素（按在 DOM 中的顺序）\n     */\n    getItems() {\n        if (!this.items) {\n            const items = this.states.map((state) => state.element);\n            this.items = items.sort((a, b) => {\n                const position = a.compareDocumentPosition(b);\n                if (position & Node.DOCUMENT_POSITION_FOLLOWING) {\n                    return -1;\n                }\n                else if (position & Node.DOCUMENT_POSITION_PRECEDING) {\n                    return 1;\n                }\n                else {\n                    return 0;\n                }\n            });\n        }\n        return this.items;\n    }\n    /**\n     * 获取 `<mdui-layout-main>` 元素\n     */\n    getMain() {\n        return this.$main ? this.$main[0] : undefined;\n    }\n    /**\n     * 获取 `<mdui-layout-item>` 及 `<mdui-layout-main>` 元素\n     */\n    getItemsAndMain() {\n        return [...this.getItems(), this.getMain()].filter((i) => i);\n    }\n    /**\n     * 更新 `order` 值，更新完后重新计算布局\n     */\n    updateOrder() {\n        this.resort();\n        this.updateLayout();\n    }\n    /**\n     * 重新计算布局\n     * @param element 从哪一个元素开始更新；若未传入参数，则将更新所有元素\n     * @param size 此次更新中，元素的宽高（仅在此次更新中使用）。若不传则自动计算\n     */\n    updateLayout(element, size) {\n        const state = element\n            ? {\n                element,\n                width: size?.width,\n                height: size?.height,\n            }\n            : undefined;\n        const index = state\n            ? this.states.findIndex((v) => v.element === state.element)\n            : 0;\n        if (index < 0) {\n            return;\n        }\n        Object.assign(this.states[index], state);\n        this.states.forEach((currState, currIndex) => {\n            if (currIndex < index) {\n                return;\n            }\n            // @ts-ignore\n            const placement = currState.element.layoutPlacement;\n            // 前一个元素\n            const prevState = currIndex > 0 ? this.states[currIndex - 1] : undefined;\n            const top = prevState?.top ?? 0;\n            const right = prevState?.right ?? 0;\n            const bottom = prevState?.bottom ?? 0;\n            const left = prevState?.left ?? 0;\n            Object.assign(currState, { top, right, bottom, left });\n            switch (placement) {\n                case 'top':\n                case 'bottom':\n                    currState[placement] +=\n                        currState.height ?? currState.element.offsetHeight;\n                    break;\n                case 'right':\n                case 'left':\n                    currState[placement] +=\n                        (this.isNoWidth(currState) ? 0 : currState.width) ??\n                            currState.element.offsetWidth;\n                    break;\n            }\n            currState.height = currState.width = undefined;\n            $(currState.element).css({\n                position: 'absolute',\n                top: placement === 'bottom' ? null : top,\n                right: placement === 'left' ? null : right,\n                bottom: placement === 'top' ? null : bottom,\n                left: placement === 'right' ? null : left,\n            });\n        });\n        // 更新完后，设置 layout-main 的 padding\n        const lastState = this.states[this.states.length - 1];\n        if (this.$main) {\n            this.$main.css({\n                paddingTop: lastState.top,\n                paddingRight: lastState.right,\n                paddingBottom: lastState.bottom,\n                paddingLeft: lastState.left,\n            });\n        }\n    }\n    /**\n     * 按 order 排序，order 相同时，按在 DOM 中的顺序排序\n     */\n    resort() {\n        const items = this.getItems();\n        this.states.sort((a, b) => {\n            const aOrder = a.element.order ?? 0;\n            const bOrder = b.element.order ?? 0;\n            if (aOrder > bOrder) {\n                return 1;\n            }\n            if (aOrder < bOrder) {\n                return -1;\n            }\n            if (items.indexOf(a.element) > items.indexOf(b.element)) {\n                return 1;\n            }\n            if (items.indexOf(a.element) < items.indexOf(b.element)) {\n                return -1;\n            }\n            return 0;\n        });\n    }\n    /**\n     * 组件宽度是否为 0\n     * mdui-navigation-drawer 较为特殊，在为模态化时，占据的宽度为 0\n     */\n    isNoWidth(state) {\n        return (isNodeName(state.element, 'mdui-navigation-drawer') &&\n            // @ts-ignore\n            state.element.isModal);\n    }\n}\nconst layoutManagerMap = new WeakMap();\n/**\n * 获取 layout 实例\n */\nexport const getLayout = (element) => {\n    if (!layoutManagerMap.has(element)) {\n        layoutManagerMap.set(element, new LayoutManager());\n    }\n    return layoutManagerMap.get(element);\n};\n", "import { __decorate } from \"tslib\";\nimport { property } from 'lit/decorators.js';\nimport { isNodeName } from '@mdui/jq/shared/helper.js';\nimport { MduiElement } from '@mdui/shared/base/mdui-element.js';\nimport { watch } from '@mdui/shared/decorators/watch.js';\nimport { getLayout } from './helper.js';\nexport class LayoutItemBase extends MduiElement {\n    constructor() {\n        super(...arguments);\n        // 父元素是否是 `mdui-layout`\n        this.isParentLayout = false;\n    }\n    /**\n     * 当前布局组件所处的位置，父类必须实现该 getter\n     */\n    get layoutPlacement() {\n        throw new Error('Must implement placement getter!');\n    }\n    // order 变更时，需要重新调整布局\n    onOrderChange() {\n        this.layoutManager?.updateOrder();\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        const parentElement = this.parentElement;\n        this.isParentLayout = isNodeName(parentElement, 'mdui-layout');\n        if (this.isParentLayout) {\n            this.layoutManager = getLayout(parentElement);\n            this.layoutManager.registerItem(this);\n        }\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        if (this.layoutManager) {\n            this.layoutManager.unregisterItem(this);\n        }\n    }\n}\n__decorate([\n    property({ type: Number, reflect: true })\n], LayoutItemBase.prototype, \"order\", void 0);\n__decorate([\n    watch('order', true)\n], LayoutItemBase.prototype, \"onOrderChange\", null);\n", "import { css } from 'lit';\nexport const navigationRailStyle = css `:host{--shape-corner:var(--mdui-shape-corner-none);--z-index:2000;position:fixed;top:0;bottom:0;left:0;display:flex;flex-direction:column;align-items:center;border-radius:0 var(--shape-corner) var(--shape-corner) 0;z-index:var(--z-index);width:5rem;background-color:rgb(var(--mdui-color-surface));padding:.375rem .75rem}:host([contained]:not([contained=false i])){position:absolute}:host([divider]:not([divider=false i])){border-right:.0625rem solid rgb(var(--mdui-color-surface-variant));width:5.0625rem}:host([placement=right]){left:initial;right:0;border-radius:var(--shape-corner) 0 0 var(--shape-corner)}:host([placement=right][divider]:not([divider=false i])){border-right:none;border-left:.0625rem solid rgb(var(--mdui-color-surface-variant))}.bottom,.items,.top{display:flex;flex-direction:column;align-items:center;width:100%}.top{margin-bottom:1.75rem}.bottom{margin-top:1.75rem}::slotted([slot=bottom]),::slotted([slot=top]),::slotted(mdui-navigation-rail-item){margin-top:.375rem;margin-bottom:.375rem}:host([alignment=start]) .top-spacer{flex-grow:0}:host([alignment=start]) .bottom-spacer{flex-grow:1}:host([alignment=end]) .top-spacer{flex-grow:1}:host([alignment=end]) .bottom-spacer{flex-grow:0}:host([alignment=center]){justify-content:center}:host([alignment=center]) .bottom,:host([alignment=center]) .top{position:absolute}:host([alignment=center]) .top{top:.375rem}:host([alignment=center]) .bottom{bottom:.375rem}`;\n", "import { __decorate } from \"tslib\";\nimport { html } from 'lit';\nimport { customElement, property, queryAssignedElements, state, } from 'lit/decorators.js';\nimport { when } from 'lit/directives/when.js';\nimport { $ } from '@mdui/jq/$.js';\nimport '@mdui/jq/methods/css.js';\nimport '@mdui/jq/methods/innerWidth.js';\nimport { DefinedController } from '@mdui/shared/controllers/defined.js';\nimport { HasSlotController } from '@mdui/shared/controllers/has-slot.js';\nimport { watch } from '@mdui/shared/decorators/watch.js';\nimport { booleanConverter } from '@mdui/shared/helpers/decorator.js';\nimport { componentStyle } from '@mdui/shared/lit-styles/component-style.js';\nimport { LayoutItemBase } from '../layout/layout-item-base.js';\nimport { navigationRailStyle } from './navigation-rail-style.js';\n/**\n * @summary 侧边导航栏组件。需配合 `<mdui-navigation-rail-item>` 组件使用\n *\n * ```html\n * <mdui-navigation-rail>\n * ..<mdui-navigation-rail-item icon=\"watch_later\">Recent</mdui-navigation-rail-item>\n * ..<mdui-navigation-rail-item icon=\"image\">Images</mdui-navigation-rail-item>\n * ..<mdui-navigation-rail-item icon=\"library_music\">Library</mdui-navigation-rail-item>\n * </mdui-navigation-rail>\n * ```\n *\n * @event change - 值变化时触发\n *\n * @slot - `<mdui-navigation-rail-item>` 组件\n * @slot top - 顶部的元素\n * @slot bottom - 底部的元素\n *\n * @csspart top - 顶部元素的容器\n * @csspart bottom - 底部元素的容器\n * @csspart items - `<mdui-navigation-rail-item>` 组件的容器\n *\n * @cssprop --shape-corner - 组件的圆角大小。可以指定一个具体的像素值；但更推荐引用[设计令牌](/docs/2/styles/design-tokens#shape-corner)\n * @cssprop --z-index - 组件的 CSS `z-index` 值\n */\nlet NavigationRail = class NavigationRail extends LayoutItemBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * 导航栏的位置。可选值包括：\n         *\n         * * `left`：左侧\n         * * `right`：右侧\n         */\n        this.placement = 'left';\n        /**\n         * `<mdui-navigation-rail-item>` 元素的对齐方式。可选值包括：\n         *\n         * * `start`：顶部对齐\n         * * `center`：居中对齐\n         * * `end`：底部对齐\n         */\n        this.alignment = 'start';\n        /**\n         * 默认情况下，导航栏相对于 `body` 元素显示。当该参数设置为 `true` 时，导航栏将相对于其父元素显示。\n         *\n         * **Note**：设置该属性时，必须在父元素上手动设置样式 `position: relative;`。\n         */\n        this.contained = false;\n        /**\n         * 是否在导航栏和页面内容之间添加分割线\n         */\n        this.divider = false;\n        // 因为 navigation-rail-item 的 value 可能会重复，所以在每个 navigation-rail-item 元素上都添加了一个唯一的 key，通过 activeKey 来记录激活状态的 key\n        this.activeKey = 0;\n        this.hasSlotController = new HasSlotController(this, 'top', 'bottom');\n        this.definedController = new DefinedController(this, {\n            relatedElements: ['mdui-navigation-rail-item'],\n        });\n        // 是否是初始状态，初始状态不触发事件，不执行动画\n        this.isInitial = true;\n    }\n    get layoutPlacement() {\n        return this.placement;\n    }\n    get parentTarget() {\n        return this.contained || this.isParentLayout\n            ? this.parentElement\n            : document.body;\n    }\n    get isRight() {\n        return this.placement === 'right';\n    }\n    get paddingValue() {\n        return ['fixed', 'absolute'].includes($(this).css('position'))\n            ? this.offsetWidth\n            : undefined;\n    }\n    async onActiveKeyChange() {\n        await this.definedController.whenDefined();\n        // 根据 activeKey 读取对应 navigation-rail-item 的值\n        const item = this.items.find((item) => item.key === this.activeKey);\n        this.value = item?.value;\n        if (!this.isInitial) {\n            this.emit('change');\n        }\n    }\n    async onValueChange() {\n        this.isInitial = !this.hasUpdated;\n        await this.definedController.whenDefined();\n        const item = this.items.find((item) => item.value === this.value);\n        this.activeKey = item?.key ?? 0;\n        this.updateItems();\n    }\n    async onContainedChange() {\n        if (this.isParentLayout) {\n            return;\n        }\n        await this.definedController.whenDefined();\n        $(document.body).css({\n            paddingLeft: this.contained || this.isRight ? null : this.paddingValue,\n            paddingRight: this.contained || !this.isRight ? null : this.paddingValue,\n        });\n        $(this.parentElement).css({\n            paddingLeft: this.contained && !this.isRight ? this.paddingValue : null,\n            paddingRight: this.contained && this.isRight ? this.paddingValue : null,\n        });\n    }\n    async onPlacementChange() {\n        await this.definedController.whenDefined();\n        this.layoutManager?.updateLayout(this);\n        this.items.forEach((item) => {\n            item.placement = this.placement;\n        });\n        if (!this.isParentLayout) {\n            $(this.parentTarget).css({\n                paddingLeft: this.isRight ? null : this.paddingValue,\n                paddingRight: this.isRight ? this.paddingValue : null,\n            });\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        if (!this.isParentLayout) {\n            this.definedController.whenDefined().then(() => {\n                $(this.parentTarget).css({\n                    paddingLeft: this.isRight ? null : this.paddingValue,\n                    paddingRight: this.isRight ? this.paddingValue : null,\n                });\n            });\n        }\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        if (!this.isParentLayout && this.definedController.isDefined()) {\n            $(this.parentTarget).css({\n                paddingLeft: this.isRight ? undefined : null,\n                paddingRight: this.isRight ? null : undefined,\n            });\n        }\n    }\n    render() {\n        const hasTopSlot = this.hasSlotController.test('top');\n        const hasBottomSlot = this.hasSlotController.test('bottom');\n        return html `${when(hasTopSlot, () => html `<slot name=\"top\" part=\"top\" class=\"top\"></slot>`)} <span class=\"top-spacer\"></span><slot part=\"items\" class=\"items\" @slotchange=\"${this.onSlotChange}\" @click=\"${this.onClick}\"></slot><span class=\"bottom-spacer\"></span> ${when(hasBottomSlot, () => html `<slot name=\"bottom\" part=\"bottom\" class=\"bottom\"></slot>`)}`;\n    }\n    onClick(event) {\n        // event.button 为 0 时，为鼠标左键点击。忽略鼠标中键和右键\n        if (event.button) {\n            return;\n        }\n        const target = event.target;\n        const item = target.closest('mdui-navigation-rail-item');\n        if (!item) {\n            return;\n        }\n        this.activeKey = item.key;\n        this.isInitial = false;\n        this.updateItems();\n    }\n    updateItems() {\n        this.items.forEach((item) => {\n            item.active = this.activeKey === item.key;\n            item.placement = this.placement;\n            item.isInitial = this.isInitial;\n        });\n    }\n    async onSlotChange() {\n        await this.definedController.whenDefined();\n        this.updateItems();\n    }\n};\nNavigationRail.styles = [\n    componentStyle,\n    navigationRailStyle,\n];\n__decorate([\n    property({ reflect: true })\n], NavigationRail.prototype, \"value\", void 0);\n__decorate([\n    property({ reflect: true })\n    // eslint-disable-next-line prettier/prettier\n], NavigationRail.prototype, \"placement\", void 0);\n__decorate([\n    property({ reflect: true })\n], NavigationRail.prototype, \"alignment\", void 0);\n__decorate([\n    property({\n        type: Boolean,\n        reflect: true,\n        converter: booleanConverter,\n    })\n], NavigationRail.prototype, \"contained\", void 0);\n__decorate([\n    property({\n        type: Boolean,\n        reflect: true,\n        converter: booleanConverter,\n    })\n], NavigationRail.prototype, \"divider\", void 0);\n__decorate([\n    state()\n], NavigationRail.prototype, \"activeKey\", void 0);\n__decorate([\n    queryAssignedElements({\n        selector: 'mdui-navigation-rail-item',\n        flatten: true,\n    })\n], NavigationRail.prototype, \"items\", void 0);\n__decorate([\n    watch('activeKey', true)\n], NavigationRail.prototype, \"onActiveKeyChange\", null);\n__decorate([\n    watch('value')\n], NavigationRail.prototype, \"onValueChange\", null);\n__decorate([\n    watch('contained', true)\n], NavigationRail.prototype, \"onContainedChange\", null);\n__decorate([\n    watch('placement', true)\n], NavigationRail.prototype, \"onPlacementChange\", null);\nNavigationRail = __decorate([\n    customElement('mdui-navigation-rail')\n], NavigationRail);\nexport { NavigationRail };\n"],
  "mappings": "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",
  "names": ["state", "item", "NavigationRail", "item"]
}
