import {
  uniqueId
} from "./chunk-3373L762.js";
import {
  AnchorMixin,
  FocusableMixin,
  RippleMixin,
  cc,
  classMap,
  createRef,
  nothingTemplate,
  ref
} from "./chunk-VLYWBSIC.js";
import {
  HasSlotController,
  MduiElement,
  booleanConverter,
  componentStyle,
  property,
  state
} from "./chunk-TEJKIG4D.js";
import {
  __decorate,
  css,
  customElement,
  html,
  nothing
} from "./chunk-TAWH3UXR.js";

// node_modules/mdui/components/navigation-rail/navigation-rail-item-style.js
var navigationRailItemStyle = css`:host{--shape-corner-indicator:var(--mdui-shape-corner-full);position:relative;z-index:0;width:100%;--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface-variant)}.container{display:flex;flex-direction:column;align-items:center;justify-content:center;text-decoration:none;cursor:pointer;-webkit-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;height:3.5rem}.container:not(.initial){transition:padding var(--mdui-motion-duration-short4) var(--mdui-motion-easing-standard)}mdui-ripple{z-index:1;width:3.5rem;height:2rem;border-radius:var(--mdui-shape-corner-full)}.container:not(.has-label)+mdui-ripple{height:3.5rem}.indicator{position:relative;display:flex;align-items:center;justify-content:center;background-color:transparent;border-radius:var(--shape-corner-indicator);height:2rem;width:2rem}:not(.initial) .indicator{transition:background-color var(--mdui-motion-duration-short1) var(--mdui-motion-easing-standard),width var(--mdui-motion-duration-short4) var(--mdui-motion-easing-standard),height var(--mdui-motion-duration-short4) var(--mdui-motion-easing-standard)}::slotted([slot=badge]){position:absolute;transform:translate(50%,-50%)}.placement-right::slotted([slot=badge]){transform:translate(-50%,-50%)}::slotted([slot=badge][variant=small]){transform:translate(.5625rem,-.5625rem)}.placement-right::slotted([slot=badge][variant=small]){transform:translate(-.5625rem,-.5625rem)}.active-icon,.icon{color:rgb(var(--mdui-color-on-surface-variant));font-size:1.5rem}.active-icon mdui-icon,.icon mdui-icon,::slotted([slot=active-icon]),::slotted([slot=icon]){font-size:inherit}.icon{display:flex}.active-icon{display:none}.label{display:flex;align-items:center;height:1rem;color:rgb(var(--mdui-color-on-surface-variant));margin-top:.25rem;margin-bottom:.25rem;font-size:var(--mdui-typescale-label-medium-size);font-weight:var(--mdui-typescale-label-medium-weight);letter-spacing:var(--mdui-typescale-label-medium-tracking);line-height:var(--mdui-typescale-label-medium-line-height)}:not(.initial) .label{transition:opacity var(--mdui-motion-duration-short4) var(--mdui-motion-easing-linear)}:host([active]){--mdui-comp-ripple-state-layer-color:var(--mdui-color-on-surface)}:host([active]) .indicator{width:3.5rem;background-color:rgb(var(--mdui-color-secondary-container))}:host([active]) :not(.has-label) .indicator{height:3.5rem}:host([active]) .active-icon,:host([active]) .icon{color:rgb(var(--mdui-color-on-secondary-container))}:host([active]) .has-active-icon .active-icon{display:flex}:host([active]) .has-active-icon .icon{display:none}:host([active]) .label{color:rgb(var(--mdui-color-on-surface))}`;

// node_modules/mdui/components/navigation-rail/navigation-rail-item.js
var NavigationRailItem = class NavigationRailItem2 extends AnchorMixin(RippleMixin(FocusableMixin(MduiElement))) {
  constructor() {
    super(...arguments);
    this.active = false;
    this.isInitial = true;
    this.placement = "left";
    this.disabled = false;
    this.key = uniqueId();
    this.rippleRef = createRef();
    this.hasSlotController = new HasSlotController(this, "[default]", "active-icon");
  }
  get rippleElement() {
    return this.rippleRef.value;
  }
  get rippleDisabled() {
    return this.disabled;
  }
  get focusElement() {
    return this.href ? this.renderRoot?.querySelector("._a") : this;
  }
  get focusDisabled() {
    return this.disabled;
  }
  render() {
    const hasDefaultSlot = this.hasSlotController.test("[default]");
    const className = cc({
      container: true,
      "has-label": hasDefaultSlot,
      "has-active-icon": this.activeIcon || this.hasSlotController.test("active-icon"),
      initial: this.isInitial
    });
    return html`${this.href ? this.renderAnchor({
      part: "container",
      className,
      content: this.renderInner(hasDefaultSlot)
    }) : html`<div part="container" class="${className}">${this.renderInner(hasDefaultSlot)}</div>`}<mdui-ripple .noRipple="${!this.active || this.noRipple}" ${ref(this.rippleRef)}></mdui-ripple>`;
  }
  renderInner(hasDefaultSlot) {
    return html`<div part="indicator" class="indicator"><slot name="badge" part="badge" class="${classMap({
      badge: true,
      "placement-right": this.placement === "right"
    })}"></slot><slot name="active-icon" part="active-icon" class="active-icon">${this.activeIcon ? html`<mdui-icon name="${this.activeIcon}"></mdui-icon>` : nothingTemplate}</slot><slot name="icon" part="icon" class="icon">${this.icon ? html`<mdui-icon name="${this.icon}"></mdui-icon>` : nothingTemplate}</slot></div>${hasDefaultSlot ? html`<slot part="label" class="label"></slot>` : nothing}`;
  }
};
NavigationRailItem.styles = [
  componentStyle,
  navigationRailItemStyle
];
__decorate([
  property({ reflect: true })
], NavigationRailItem.prototype, "icon", void 0);
__decorate([
  property({ reflect: true, attribute: "active-icon" })
], NavigationRailItem.prototype, "activeIcon", void 0);
__decorate([
  property({ reflect: true })
], NavigationRailItem.prototype, "value", void 0);
__decorate([
  property({
    type: Boolean,
    reflect: true,
    converter: booleanConverter
  })
], NavigationRailItem.prototype, "active", void 0);
__decorate([
  state()
], NavigationRailItem.prototype, "isInitial", void 0);
__decorate([
  state()
], NavigationRailItem.prototype, "placement", void 0);
__decorate([
  state()
], NavigationRailItem.prototype, "disabled", void 0);
NavigationRailItem = __decorate([
  customElement("mdui-navigation-rail-item")
], NavigationRailItem);

export {
  NavigationRailItem
};
//# sourceMappingURL=chunk-UI5BIJFD.js.map
