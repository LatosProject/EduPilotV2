{
  "version": 3,
  "sources": ["../../lit-html/src/directives/style-map.ts", "../../lit-html/src/directive-helpers.ts", "../../lit-html/src/async-directive.ts", "../../lit-html/src/directives/private-async-helpers.ts", "../../lit-html/src/directives/until.ts", "../../@mdui/jq/functions/contains.js", "../../@mdui/jq/functions/merge.js", "../../@mdui/jq/methods/find.js", "../../@mdui/jq/shared/event.js", "../../@mdui/jq/methods/trigger.js", "../../@mdui/jq/functions/extend.js", "../../@mdui/jq/shared/ajax.js", "../../@mdui/jq/functions/param.js", "../../@mdui/jq/functions/ajax.js", "../../mdui/components/icon/style.js", "../../mdui/components/icon/index.js", "../../@mdui/jq/methods/off.js", "../../@mdui/jq/methods/on.js", "../../@mdui/jq/methods/remove.js", "../../@mdui/jq/methods/insertBefore.js", "../../@mdui/jq/functions/each.js", "../../@mdui/jq/functions/map.js", "../../@mdui/jq/methods/map.js", "../../@mdui/jq/methods/appendTo.js", "../../lit-html/src/directives/class-map.ts", "../../lit-html/src/directives/ref.ts", "../../@mdui/jq/methods/addClass.js", "../../@mdui/jq/shared/data.js", "../../@mdui/jq/methods/data.js", "../../@mdui/jq/methods/filter.js", "../../@mdui/jq/methods/slice.js", "../../@mdui/jq/methods/eq.js", "../../@mdui/jq/methods/offsetParent.js", "../../@mdui/jq/methods/position.js", "../../@mdui/jq/methods/offset.js", "../../mdui/components/ripple/style.js", "../../mdui/components/ripple/index.js", "../../classcat/index.js", "../../@mdui/shared/helpers/template.js", "../../lit-html/src/directives/if-defined.ts", "../../@mdui/shared/mixins/anchor.js", "../../@mdui/jq/methods/removeAttr.js", "../../@mdui/shared/mixins/focusable.js", "../../@mdui/jq/methods/utils/dir.js", "../../@mdui/jq/methods/parent.js", "../../@mdui/jq/methods/index.js", "../../mdui/components/ripple/ripple-mixin.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of CSS properties and values.\n *\n * The key should be either a valid CSS property name string, like\n * `'background-color'`, or a valid JavaScript camel case property name\n * for CSSStyleDeclaration like `backgroundColor`.\n */\nexport interface StyleInfo {\n  [name: string]: string | number | undefined | null;\n}\n\nconst important = 'important';\n// The leading space is important\nconst importantFlag = ' !' + important;\n// How many characters to remove from a value, as a negative number\nconst flagTrim = 0 - importantFlag.length;\n\nclass StyleMapDirective extends Directive {\n  private _previousStyleProperties?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'style' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        'The `styleMap` directive must be used in the `style` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(styleInfo: Readonly<StyleInfo>) {\n    return Object.keys(styleInfo).reduce((style, prop) => {\n      const value = styleInfo[prop];\n      if (value == null) {\n        return style;\n      }\n      // Convert property names from camel-case to dash-case, i.e.:\n      //  `backgroundColor` -> `background-color`\n      // Vendor-prefixed names need an extra `-` appended to front:\n      //  `webkitAppearance` -> `-webkit-appearance`\n      // Exception is any property name containing a dash, including\n      // custom properties; we assume these are already dash-cased i.e.:\n      //  `--my-button-color` --> `--my-button-color`\n      prop = prop.includes('-')\n        ? prop\n        : prop\n            .replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, '-$&')\n            .toLowerCase();\n      return style + `${prop}:${value};`;\n    }, '');\n  }\n\n  override update(part: AttributePart, [styleInfo]: DirectiveParameters<this>) {\n    const {style} = part.element as HTMLElement;\n\n    if (this._previousStyleProperties === undefined) {\n      this._previousStyleProperties = new Set(Object.keys(styleInfo));\n      return this.render(styleInfo);\n    }\n\n    // Remove old properties that no longer exist in styleInfo\n    for (const name of this._previousStyleProperties) {\n      // If the name isn't in styleInfo or it's null/undefined\n      if (styleInfo[name] == null) {\n        this._previousStyleProperties!.delete(name);\n        if (name.includes('-')) {\n          style.removeProperty(name);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = null;\n        }\n      }\n    }\n\n    // Add or update properties\n    for (const name in styleInfo) {\n      const value = styleInfo[name];\n      if (value != null) {\n        this._previousStyleProperties.add(name);\n        const isImportant =\n          typeof value === 'string' && value.endsWith(importantFlag);\n        if (name.includes('-') || isImportant) {\n          style.setProperty(\n            name,\n            isImportant\n              ? (value as string).slice(0, flagTrim)\n              : (value as string),\n            isImportant ? important : ''\n          );\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = value;\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the\n * {@link StyleInfo styleInfo} object and adds the properties to the inline\n * style of the element.\n *\n * Property names with dashes (`-`) are assumed to be valid CSS\n * property names and set on the element's style object using `setProperty()`.\n * Names without dashes are assumed to be camelCased JavaScript property names\n * and set on the element's style object using property assignment, allowing the\n * style object to translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo\n * @see {@link https://lit.dev/docs/templates/directives/#stylemap styleMap code samples on Lit.dev}\n */\nexport const styleMap = directive(StyleMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {StyleMapDirective};\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {\n  _$LH,\n  Part,\n  DirectiveParent,\n  CompiledTemplateResult,\n  MaybeCompiledTemplateResult,\n  UncompiledTemplateResult,\n} from './lit-html.js';\nimport {\n  DirectiveResult,\n  DirectiveClass,\n  PartInfo,\n  AttributePartInfo,\n} from './directive.js';\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\n\nconst {_ChildPart: ChildPart} = _$LH;\n\ntype ChildPart = InstanceType<typeof ChildPart>;\n\nconst ENABLE_SHADYDOM_NOPATCH = true;\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  window.ShadyDOM?.inUse &&\n  window.ShadyDOM?.noPatch === true\n    ? window.ShadyDOM!.wrap\n    : (node: Node) => node;\n\n/**\n * Tests if a value is a primitive value.\n *\n * See https://tc39.github.io/ecma262/#sec-typeof-operator\n */\nexport const isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\n\nexport const TemplateResultType = {\n  HTML: 1,\n  SVG: 2,\n  MATHML: 3,\n} as const;\n\nexport type TemplateResultType =\n  (typeof TemplateResultType)[keyof typeof TemplateResultType];\n\ntype IsTemplateResult = {\n  (val: unknown): val is MaybeCompiledTemplateResult;\n  <T extends TemplateResultType>(\n    val: unknown,\n    type: T\n  ): val is UncompiledTemplateResult<T>;\n};\n\n/**\n * Tests if a value is a TemplateResult or a CompiledTemplateResult.\n */\nexport const isTemplateResult: IsTemplateResult = (\n  value: unknown,\n  type?: TemplateResultType\n): value is UncompiledTemplateResult =>\n  type === undefined\n    ? // This property needs to remain unminified.\n      (value as UncompiledTemplateResult)?.['_$litType$'] !== undefined\n    : (value as UncompiledTemplateResult)?.['_$litType$'] === type;\n\n/**\n * Tests if a value is a CompiledTemplateResult.\n */\nexport const isCompiledTemplateResult = (\n  value: unknown\n): value is CompiledTemplateResult => {\n  return (value as CompiledTemplateResult)?.['_$litType$']?.h != null;\n};\n\n/**\n * Tests if a value is a DirectiveResult.\n */\nexport const isDirectiveResult = (value: unknown): value is DirectiveResult =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'] !== undefined;\n\n/**\n * Retrieves the Directive class for a DirectiveResult\n */\nexport const getDirectiveClass = (value: unknown): DirectiveClass | undefined =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'];\n\n/**\n * Tests whether a part has only a single-expression with no strings to\n * interpolate between.\n *\n * Only AttributePart and PropertyPart can have multiple expressions.\n * Multi-expression parts have a `strings` property and single-expression\n * parts do not.\n */\nexport const isSingleExpression = (part: PartInfo) =>\n  (part as AttributePartInfo).strings === undefined;\n\nconst createMarker = () => document.createComment('');\n\n/**\n * Inserts a ChildPart into the given container ChildPart's DOM, either at the\n * end of the container ChildPart, or before the optional `refPart`.\n *\n * This does not add the part to the containerPart's committed value. That must\n * be done by callers.\n *\n * @param containerPart Part within which to add the new ChildPart\n * @param refPart Part before which to add the new ChildPart; when omitted the\n *     part added to the end of the `containerPart`\n * @param part Part to insert, or undefined to create a new part\n */\nexport const insertPart = (\n  containerPart: ChildPart,\n  refPart?: ChildPart,\n  part?: ChildPart\n): ChildPart => {\n  const container = wrap(containerPart._$startNode).parentNode!;\n\n  const refNode =\n    refPart === undefined ? containerPart._$endNode : refPart._$startNode;\n\n  if (part === undefined) {\n    const startNode = wrap(container).insertBefore(createMarker(), refNode);\n    const endNode = wrap(container).insertBefore(createMarker(), refNode);\n    part = new ChildPart(\n      startNode,\n      endNode,\n      containerPart,\n      containerPart.options\n    );\n  } else {\n    const endNode = wrap(part._$endNode!).nextSibling;\n    const oldParent = part._$parent;\n    const parentChanged = oldParent !== containerPart;\n    if (parentChanged) {\n      part._$reparentDisconnectables?.(containerPart);\n      // Note that although `_$reparentDisconnectables` updates the part's\n      // `_$parent` reference after unlinking from its current parent, that\n      // method only exists if Disconnectables are present, so we need to\n      // unconditionally set it here\n      part._$parent = containerPart;\n      // Since the _$isConnected getter is somewhat costly, only\n      // read it once we know the subtree has directives that need\n      // to be notified\n      let newConnectionState;\n      if (\n        part._$notifyConnectionChanged !== undefined &&\n        (newConnectionState = containerPart._$isConnected) !==\n          oldParent!._$isConnected\n      ) {\n        part._$notifyConnectionChanged(newConnectionState);\n      }\n    }\n    if (endNode !== refNode || parentChanged) {\n      let start: Node | null = part._$startNode;\n      while (start !== endNode) {\n        const n: Node | null = wrap(start!).nextSibling;\n        wrap(container).insertBefore(start!, refNode);\n        start = n;\n      }\n    }\n  }\n\n  return part;\n};\n\n/**\n * Sets the value of a Part.\n *\n * Note that this should only be used to set/update the value of user-created\n * parts (i.e. those created using `insertPart`); it should not be used\n * by directives to set the value of the directive's container part. Directives\n * should return a value from `update`/`render` to update their part state.\n *\n * For directives that require setting their part value asynchronously, they\n * should extend `AsyncDirective` and call `this.setValue()`.\n *\n * @param part Part to set\n * @param value Value to set\n * @param index For `AttributePart`s, the index to set\n * @param directiveParent Used internally; should not be set by user\n */\nexport const setChildPartValue = <T extends ChildPart>(\n  part: T,\n  value: unknown,\n  directiveParent: DirectiveParent = part\n): T => {\n  part._$setValue(value, directiveParent);\n  return part;\n};\n\n// A sentinel value that can never appear as a part value except when set by\n// live(). Used to force a dirty-check to fail and cause a re-render.\nconst RESET_VALUE = {};\n\n/**\n * Sets the committed value of a ChildPart directly without triggering the\n * commit stage of the part.\n *\n * This is useful in cases where a directive needs to update the part such\n * that the next update detects a value change or not. When value is omitted,\n * the next update will be guaranteed to be detected as a change.\n *\n * @param part\n * @param value\n */\nexport const setCommittedValue = (part: Part, value: unknown = RESET_VALUE) =>\n  (part._$committedValue = value);\n\n/**\n * Returns the committed value of a ChildPart.\n *\n * The committed value is used for change detection and efficient updates of\n * the part. It can differ from the value set by the template or directive in\n * cases where the template value is transformed before being committed.\n *\n * - `TemplateResult`s are committed as a `TemplateInstance`\n * - Iterables are committed as `Array<ChildPart>`\n * - All other types are committed as the template value or value returned or\n *   set by a directive.\n *\n * @param part\n */\nexport const getCommittedValue = (part: ChildPart) => part._$committedValue;\n\n/**\n * Removes a ChildPart from the DOM, including any of its content and markers.\n *\n * Note: The only difference between this and clearPart() is that this also\n * removes the part's start node. This means that the ChildPart must own its\n * start node, ie it must be a marker node specifically for this part and not an\n * anchor from surrounding content.\n *\n * @param part The Part to remove\n */\nexport const removePart = (part: ChildPart) => {\n  part._$clear();\n  part._$startNode.remove();\n};\n\nexport const clearPart = (part: ChildPart) => {\n  part._$clear();\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Overview:\n *\n * This module is designed to add support for an async `setValue` API and\n * `disconnected` callback to directives with the least impact on the core\n * runtime or payload when that feature is not used.\n *\n * The strategy is to introduce a `AsyncDirective` subclass of\n * `Directive` that climbs the \"parent\" tree in its constructor to note which\n * branches of lit-html's \"logical tree\" of data structures contain such\n * directives and thus need to be crawled when a subtree is being cleared (or\n * manually disconnected) in order to run the `disconnected` callback.\n *\n * The \"nodes\" of the logical tree include Parts, TemplateInstances (for when a\n * TemplateResult is committed to a value of a ChildPart), and Directives; these\n * all implement a common interface called `DisconnectableChild`. Each has a\n * `_$parent` reference which is set during construction in the core code, and a\n * `_$disconnectableChildren` field which is initially undefined.\n *\n * The sparse tree created by means of the `AsyncDirective` constructor\n * crawling up the `_$parent` tree and placing a `_$disconnectableChildren` Set\n * on each parent that includes each child that contains a\n * `AsyncDirective` directly or transitively via its children. In order to\n * notify connection state changes and disconnect (or reconnect) a tree, the\n * `_$notifyConnectionChanged` API is patched onto ChildParts as a directive\n * climbs the parent tree, which is called by the core when clearing a part if\n * it exists. When called, that method iterates over the sparse tree of\n * Set<DisconnectableChildren> built up by AsyncDirectives, and calls\n * `_$notifyDirectiveConnectionChanged` on any directives that are encountered\n * in that tree, running the required callbacks.\n *\n * A given \"logical tree\" of lit-html data-structures might look like this:\n *\n *  ChildPart(N1) _$dC=[D2,T3]\n *   ._directive\n *     AsyncDirective(D2)\n *   ._value // user value was TemplateResult\n *     TemplateInstance(T3) _$dC=[A4,A6,N10,N12]\n *      ._$parts[]\n *        AttributePart(A4) _$dC=[D5]\n *         ._directives[]\n *           AsyncDirective(D5)\n *        AttributePart(A6) _$dC=[D7,D8]\n *         ._directives[]\n *           AsyncDirective(D7)\n *           Directive(D8) _$dC=[D9]\n *            ._directive\n *              AsyncDirective(D9)\n *        ChildPart(N10) _$dC=[D11]\n *         ._directive\n *           AsyncDirective(D11)\n *         ._value\n *           string\n *        ChildPart(N12) _$dC=[D13,N14,N16]\n *         ._directive\n *           AsyncDirective(D13)\n *         ._value // user value was iterable\n *           Array<ChildPart>\n *             ChildPart(N14) _$dC=[D15]\n *              ._value\n *                string\n *             ChildPart(N16) _$dC=[D17,T18]\n *              ._directive\n *                AsyncDirective(D17)\n *              ._value // user value was TemplateResult\n *                TemplateInstance(T18) _$dC=[A19,A21,N25]\n *                 ._$parts[]\n *                   AttributePart(A19) _$dC=[D20]\n *                    ._directives[]\n *                      AsyncDirective(D20)\n *                   AttributePart(A21) _$dC=[22,23]\n *                    ._directives[]\n *                      AsyncDirective(D22)\n *                      Directive(D23) _$dC=[D24]\n *                       ._directive\n *                         AsyncDirective(D24)\n *                   ChildPart(N25) _$dC=[D26]\n *                    ._directive\n *                      AsyncDirective(D26)\n *                    ._value\n *                      string\n *\n * Example 1: The directive in ChildPart(N12) updates and returns `nothing`. The\n * ChildPart will _clear() itself, and so we need to disconnect the \"value\" of\n * the ChildPart (but not its directive). In this case, when `_clear()` calls\n * `_$notifyConnectionChanged()`, we don't iterate all of the\n * _$disconnectableChildren, rather we do a value-specific disconnection: i.e.\n * since the _value was an Array<ChildPart> (because an iterable had been\n * committed), we iterate the array of ChildParts (N14, N16) and run\n * `setConnected` on them (which does recurse down the full tree of\n * `_$disconnectableChildren` below it, and also removes N14 and N16 from N12's\n * `_$disconnectableChildren`). Once the values have been disconnected, we then\n * check whether the ChildPart(N12)'s list of `_$disconnectableChildren` is empty\n * (and would remove it from its parent TemplateInstance(T3) if so), but since\n * it would still contain its directive D13, it stays in the disconnectable\n * tree.\n *\n * Example 2: In the course of Example 1, `setConnected` will reach\n * ChildPart(N16); in this case the entire part is being disconnected, so we\n * simply iterate all of N16's `_$disconnectableChildren` (D17,T18) and\n * recursively run `setConnected` on them. Note that we only remove children\n * from `_$disconnectableChildren` for the top-level values being disconnected\n * on a clear; doing this bookkeeping lower in the tree is wasteful since it's\n * all being thrown away.\n *\n * Example 3: If the LitElement containing the entire tree above becomes\n * disconnected, it will run `childPart.setConnected()` (which calls\n * `childPart._$notifyConnectionChanged()` if it exists); in this case, we\n * recursively run `setConnected()` over the entire tree, without removing any\n * children from `_$disconnectableChildren`, since this tree is required to\n * re-connect the tree, which does the same operation, simply passing\n * `isConnected: true` down the tree, signaling which callback to run.\n */\n\nimport {AttributePart, ChildPart, Disconnectable, Part} from './lit-html.js';\nimport {isSingleExpression} from './directive-helpers.js';\nimport {Directive, PartInfo, PartType} from './directive.js';\nexport * from './directive.js';\n\nconst DEV_MODE = true;\n\n/**\n * Recursively walks down the tree of Parts/TemplateInstances/Directives to set\n * the connected state of directives and run `disconnected`/ `reconnected`\n * callbacks.\n *\n * @return True if there were children to disconnect; false otherwise\n */\nconst notifyChildrenConnectedChanged = (\n  parent: Disconnectable,\n  isConnected: boolean\n): boolean => {\n  const children = parent._$disconnectableChildren;\n  if (children === undefined) {\n    return false;\n  }\n  for (const obj of children) {\n    // The existence of `_$notifyDirectiveConnectionChanged` is used as a \"brand\" to\n    // disambiguate AsyncDirectives from other DisconnectableChildren\n    // (as opposed to using an instanceof check to know when to call it); the\n    // redundancy of \"Directive\" in the API name is to avoid conflicting with\n    // `_$notifyConnectionChanged`, which exists `ChildParts` which are also in\n    // this list\n    // Disconnect Directive (and any nested directives contained within)\n    // This property needs to remain unminified.\n    (obj as AsyncDirective)['_$notifyDirectiveConnectionChanged']?.(\n      isConnected,\n      false\n    );\n    // Disconnect Part/TemplateInstance\n    notifyChildrenConnectedChanged(obj, isConnected);\n  }\n  return true;\n};\n\n/**\n * Removes the given child from its parent list of disconnectable children, and\n * if the parent list becomes empty as a result, removes the parent from its\n * parent, and so forth up the tree when that causes subsequent parent lists to\n * become empty.\n */\nconst removeDisconnectableFromParent = (obj: Disconnectable) => {\n  let parent, children;\n  do {\n    if ((parent = obj._$parent) === undefined) {\n      break;\n    }\n    children = parent._$disconnectableChildren!;\n    children.delete(obj);\n    obj = parent;\n  } while (children?.size === 0);\n};\n\nconst addDisconnectableToParent = (obj: Disconnectable) => {\n  // Climb the parent tree, creating a sparse tree of children needing\n  // disconnection\n  for (let parent; (parent = obj._$parent); obj = parent) {\n    let children = parent._$disconnectableChildren;\n    if (children === undefined) {\n      parent._$disconnectableChildren = children = new Set();\n    } else if (children.has(obj)) {\n      // Once we've reached a parent that already contains this child, we\n      // can short-circuit\n      break;\n    }\n    children.add(obj);\n    installDisconnectAPI(parent);\n  }\n};\n\n/**\n * Changes the parent reference of the ChildPart, and updates the sparse tree of\n * Disconnectable children accordingly.\n *\n * Note, this method will be patched onto ChildPart instances and called from\n * the core code when parts are moved between different parents.\n */\nfunction reparentDisconnectables(this: ChildPart, newParent: Disconnectable) {\n  if (this._$disconnectableChildren !== undefined) {\n    removeDisconnectableFromParent(this);\n    this._$parent = newParent;\n    addDisconnectableToParent(this);\n  } else {\n    this._$parent = newParent;\n  }\n}\n\n/**\n * Sets the connected state on any directives contained within the committed\n * value of this part (i.e. within a TemplateInstance or iterable of\n * ChildParts) and runs their `disconnected`/`reconnected`s, as well as within\n * any directives stored on the ChildPart (when `valueOnly` is false).\n *\n * `isClearingValue` should be passed as `true` on a top-level part that is\n * clearing itself, and not as a result of recursively disconnecting directives\n * as part of a `clear` operation higher up the tree. This both ensures that any\n * directive on this ChildPart that produced a value that caused the clear\n * operation is not disconnected, and also serves as a performance optimization\n * to avoid needless bookkeeping when a subtree is going away; when clearing a\n * subtree, only the top-most part need to remove itself from the parent.\n *\n * `fromPartIndex` is passed only in the case of a partial `_clear` running as a\n * result of truncating an iterable.\n *\n * Note, this method will be patched onto ChildPart instances and called from the\n * core code when parts are cleared or the connection state is changed by the\n * user.\n */\nfunction notifyChildPartConnectedChanged(\n  this: ChildPart,\n  isConnected: boolean,\n  isClearingValue = false,\n  fromPartIndex = 0\n) {\n  const value = this._$committedValue;\n  const children = this._$disconnectableChildren;\n  if (children === undefined || children.size === 0) {\n    return;\n  }\n  if (isClearingValue) {\n    if (Array.isArray(value)) {\n      // Iterable case: Any ChildParts created by the iterable should be\n      // disconnected and removed from this ChildPart's disconnectable\n      // children (starting at `fromPartIndex` in the case of truncation)\n      for (let i = fromPartIndex; i < value.length; i++) {\n        notifyChildrenConnectedChanged(value[i], false);\n        removeDisconnectableFromParent(value[i]);\n      }\n    } else if (value != null) {\n      // TemplateInstance case: If the value has disconnectable children (will\n      // only be in the case that it is a TemplateInstance), we disconnect it\n      // and remove it from this ChildPart's disconnectable children\n      notifyChildrenConnectedChanged(value as Disconnectable, false);\n      removeDisconnectableFromParent(value as Disconnectable);\n    }\n  } else {\n    notifyChildrenConnectedChanged(this, isConnected);\n  }\n}\n\n/**\n * Patches disconnection API onto ChildParts.\n */\nconst installDisconnectAPI = (obj: Disconnectable) => {\n  if ((obj as ChildPart).type == PartType.CHILD) {\n    (obj as ChildPart)._$notifyConnectionChanged ??=\n      notifyChildPartConnectedChanged;\n    (obj as ChildPart)._$reparentDisconnectables ??= reparentDisconnectables;\n  }\n};\n\n/**\n * An abstract `Directive` base class whose `disconnected` method will be\n * called when the part containing the directive is cleared as a result of\n * re-rendering, or when the user calls `part.setConnected(false)` on\n * a part that was previously rendered containing the directive (as happens\n * when e.g. a LitElement disconnects from the DOM).\n *\n * If `part.setConnected(true)` is subsequently called on a\n * containing part, the directive's `reconnected` method will be called prior\n * to its next `update`/`render` callbacks. When implementing `disconnected`,\n * `reconnected` should also be implemented to be compatible with reconnection.\n *\n * Note that updates may occur while the directive is disconnected. As such,\n * directives should generally check the `this.isConnected` flag during\n * render/update to determine whether it is safe to subscribe to resources\n * that may prevent garbage collection.\n */\nexport abstract class AsyncDirective extends Directive {\n  // As opposed to other Disconnectables, AsyncDirectives always get notified\n  // when the RootPart connection changes, so the public `isConnected`\n  // is a locally stored variable initialized via its part's getter and synced\n  // via `_$notifyDirectiveConnectionChanged`. This is cheaper than using\n  // the _$isConnected getter, which has to look back up the tree each time.\n  /**\n   * The connection state for this Directive.\n   */\n  isConnected!: boolean;\n\n  // @internal\n  override _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /**\n   * Initialize the part with internal fields\n   * @param part\n   * @param parent\n   * @param attributeIndex\n   */\n  override _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    super._$initialize(part, parent, attributeIndex);\n    addDisconnectableToParent(this);\n    this.isConnected = part._$isConnected;\n  }\n  // This property needs to remain unminified.\n  /**\n   * Called from the core code when a directive is going away from a part (in\n   * which case `shouldRemoveFromParent` should be true), and from the\n   * `setChildrenConnected` helper function when recursively changing the\n   * connection state of a tree (in which case `shouldRemoveFromParent` should\n   * be false).\n   *\n   * @param isConnected\n   * @param isClearingDirective - True when the directive itself is being\n   *     removed; false when the tree is being disconnected\n   * @internal\n   */\n  override ['_$notifyDirectiveConnectionChanged'](\n    isConnected: boolean,\n    isClearingDirective = true\n  ) {\n    if (isConnected !== this.isConnected) {\n      this.isConnected = isConnected;\n      if (isConnected) {\n        this.reconnected?.();\n      } else {\n        this.disconnected?.();\n      }\n    }\n    if (isClearingDirective) {\n      notifyChildrenConnectedChanged(this, isConnected);\n      removeDisconnectableFromParent(this);\n    }\n  }\n\n  /**\n   * Sets the value of the directive's Part outside the normal `update`/`render`\n   * lifecycle of a directive.\n   *\n   * This method should not be called synchronously from a directive's `update`\n   * or `render`.\n   *\n   * @param directive The directive to update\n   * @param value The value to set\n   */\n  setValue(value: unknown) {\n    if (isSingleExpression(this.__part as unknown as PartInfo)) {\n      this.__part._$setValue(value, this);\n    } else {\n      // this.__attributeIndex will be defined in this case, but\n      // assert it in dev mode\n      if (DEV_MODE && this.__attributeIndex === undefined) {\n        throw new Error(`Expected this.__attributeIndex to be a number`);\n      }\n      const newValues = [...(this.__part._$committedValue as Array<unknown>)];\n      newValues[this.__attributeIndex!] = value;\n      (this.__part as AttributePart)._$setValue(newValues, this, 0);\n    }\n  }\n\n  /**\n   * User callbacks for implementing logic to release any resources/subscriptions\n   * that may have been retained by this directive. Since directives may also be\n   * re-connected, `reconnected` should also be implemented to restore the\n   * working state of the directive prior to the next render.\n   */\n  protected disconnected() {}\n  protected reconnected() {}\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Note, this module is not included in package exports so that it's private to\n// our first-party directives. If it ends up being useful, we can open it up and\n// export it.\n\n/**\n * Helper to iterate an AsyncIterable in its own closure.\n * @param iterable The iterable to iterate\n * @param callback The callback to call for each value. If the callback returns\n * `false`, the loop will be broken.\n */\nexport const forAwaitOf = async <T>(\n  iterable: AsyncIterable<T>,\n  callback: (value: T) => Promise<boolean>\n) => {\n  for await (const v of iterable) {\n    if ((await callback(v)) === false) {\n      return;\n    }\n  }\n};\n\n/**\n * Holds a reference to an instance that can be disconnected and reconnected,\n * so that a closure over the ref (e.g. in a then function to a promise) does\n * not strongly hold a ref to the instance. Approximates a WeakRef but must\n * be manually connected & disconnected to the backing instance.\n */\nexport class PseudoWeakRef<T> {\n  private _ref?: T;\n  constructor(ref: T) {\n    this._ref = ref;\n  }\n  /**\n   * Disassociates the ref with the backing instance.\n   */\n  disconnect() {\n    this._ref = undefined;\n  }\n  /**\n   * Reassociates the ref with the backing instance.\n   */\n  reconnect(ref: T) {\n    this._ref = ref;\n  }\n  /**\n   * Retrieves the backing instance (will be undefined when disconnected)\n   */\n  deref() {\n    return this._ref;\n  }\n}\n\n/**\n * A helper to pause and resume waiting on a condition in an async function\n */\nexport class Pauser {\n  private _promise?: Promise<void> = undefined;\n  private _resolve?: () => void = undefined;\n  /**\n   * When paused, returns a promise to be awaited; when unpaused, returns\n   * undefined. Note that in the microtask between the pauser being resumed\n   * an await of this promise resolving, the pauser could be paused again,\n   * hence callers should check the promise in a loop when awaiting.\n   * @returns A promise to be awaited when paused or undefined\n   */\n  get() {\n    return this._promise;\n  }\n  /**\n   * Creates a promise to be awaited\n   */\n  pause() {\n    this._promise ??= new Promise((resolve) => (this._resolve = resolve));\n  }\n  /**\n   * Resolves the promise which may be awaited\n   */\n  resume() {\n    this._resolve?.();\n    this._promise = this._resolve = undefined;\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Part, noChange} from '../lit-html.js';\nimport {isPrimitive} from '../directive-helpers.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\nimport {Pauser, PseudoWeakRef} from './private-async-helpers.js';\n\nconst isPromise = (x: unknown) => {\n  return !isPrimitive(x) && typeof (x as {then?: unknown}).then === 'function';\n};\n// Effectively infinity, but a SMI.\nconst _infinity = 0x3fffffff;\n\nexport class UntilDirective extends AsyncDirective {\n  private __lastRenderedIndex: number = _infinity;\n  private __values: unknown[] = [];\n  private __weakThis = new PseudoWeakRef(this);\n  private __pauser = new Pauser();\n\n  render(...args: Array<unknown>): unknown {\n    return args.find((x) => !isPromise(x)) ?? noChange;\n  }\n\n  override update(_part: Part, args: Array<unknown>) {\n    const previousValues = this.__values;\n    let previousLength = previousValues.length;\n    this.__values = args;\n\n    const weakThis = this.__weakThis;\n    const pauser = this.__pauser;\n\n    // If our initial render occurs while disconnected, ensure that the pauser\n    // and weakThis are in the disconnected state\n    if (!this.isConnected) {\n      this.disconnected();\n    }\n\n    for (let i = 0; i < args.length; i++) {\n      // If we've rendered a higher-priority value already, stop.\n      if (i > this.__lastRenderedIndex) {\n        break;\n      }\n\n      const value = args[i];\n\n      // Render non-Promise values immediately\n      if (!isPromise(value)) {\n        this.__lastRenderedIndex = i;\n        // Since a lower-priority value will never overwrite a higher-priority\n        // synchronous value, we can stop processing now.\n        return value;\n      }\n\n      // If this is a Promise we've already handled, skip it.\n      if (i < previousLength && value === previousValues[i]) {\n        continue;\n      }\n\n      // We have a Promise that we haven't seen before, so priorities may have\n      // changed. Forget what we rendered before.\n      this.__lastRenderedIndex = _infinity;\n      previousLength = 0;\n\n      // Note, the callback avoids closing over `this` so that the directive\n      // can be gc'ed before the promise resolves; instead `this` is retrieved\n      // from `weakThis`, which can break the hard reference in the closure when\n      // the directive disconnects\n      Promise.resolve(value).then(async (result: unknown) => {\n        // If we're disconnected, wait until we're (maybe) reconnected\n        // The while loop here handles the case that the connection state\n        // thrashes, causing the pauser to resume and then get re-paused\n        while (pauser.get()) {\n          await pauser.get();\n        }\n        // If the callback gets here and there is no `this`, it means that the\n        // directive has been disconnected and garbage collected and we don't\n        // need to do anything else\n        const _this = weakThis.deref();\n        if (_this !== undefined) {\n          const index = _this.__values.indexOf(value);\n          // If state.values doesn't contain the value, we've re-rendered without\n          // the value, so don't render it. Then, only render if the value is\n          // higher-priority than what's already been rendered.\n          if (index > -1 && index < _this.__lastRenderedIndex) {\n            _this.__lastRenderedIndex = index;\n            _this.setValue(result);\n          }\n        }\n      });\n    }\n\n    return noChange;\n  }\n\n  override disconnected() {\n    this.__weakThis.disconnect();\n    this.__pauser.pause();\n  }\n\n  override reconnected() {\n    this.__weakThis.reconnect(this);\n    this.__pauser.resume();\n  }\n}\n\n/**\n * Renders one of a series of values, including Promises, to a Part.\n *\n * Values are rendered in priority order, with the first argument having the\n * highest priority and the last argument having the lowest priority. If a\n * value is a Promise, low-priority values will be rendered until it resolves.\n *\n * The priority of values can be used to create placeholder content for async\n * data. For example, a Promise with pending content can be the first,\n * highest-priority, argument, and a non_promise loading indicator template can\n * be used as the second, lower-priority, argument. The loading indicator will\n * render immediately, and the primary content will render when the Promise\n * resolves.\n *\n * Example:\n *\n * ```js\n * const content = fetch('./content.txt').then(r => r.text());\n * html`${until(content, html`<span>Loading...</span>`)}`\n * ```\n */\nexport const until = directive(UntilDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\n// export type {UntilDirective};\n", "import { toElement } from '../shared/helper.js';\n/**\n * 检查 container 元素内是否包含 contains 元素\n * @param container 父元素\n * @param contains 子元素\n * @example\n```js\ncontains( document, document.body ); // true\ncontains( document.getElementById('test'), document ); // false\ncontains( $('.container').get(0), $('.contains').get(0) ); // false\n```\n */\nexport const contains = (container, contains) => {\n    return container !== contains && toElement(container).contains(contains);\n};\n", "import { eachArray } from '../shared/helper.js';\n/**\n * 把第二个数组的元素追加到第一个数组中，并返回合并后的数组\n * @param first 第一个数组\n * @param second 该数组的元素将被追加到第一个数组中\n * @example\n```js\nmerge( [ 0, 1, 2 ], [ 2, 3, 4 ] )\n// [ 0, 1, 2, 2, 3, 4 ]\n```\n */\nexport const merge = (first, second) => {\n    eachArray(second, (value) => {\n        first.push(value);\n    });\n    return first;\n};\n", "import { $ } from '../$.js';\nimport { merge } from '../functions/merge.js';\nimport { JQ } from '../shared/core.js';\nimport './each.js';\nimport './get.js';\n$.fn.find = function (selector) {\n    const foundElements = [];\n    this.each((_, element) => {\n        merge(foundElements, $(element.querySelectorAll(selector)).get());\n    });\n    return new JQ(foundElements);\n};\n", "import { getWindow } from 'ssr-window';\nimport { $ } from '../$.js';\nimport { contains } from '../functions/contains.js';\nimport '../methods/find.js';\nimport '../methods/get.js';\nimport { isObjectLike } from './helper.js';\n// 直接使用 CustomEvent 在 ssr 环境下会报错\nconst CustomEvent = getWindow().CustomEvent;\n/**\n * 封装 CustomEvent，使之支持 data:事件监听参数，namespace:命名空间\n */\nexport class MduiCustomEvent extends CustomEvent {\n    constructor(type, options) {\n        super(type, options);\n        this.data = options.data;\n        this.namespace = options.namespace;\n    }\n}\nconst elementIdMap = new WeakMap();\nlet elementId = 1;\n/**\n * 为元素赋予一个唯一的ID\n */\nconst getElementId = (element) => {\n    if (!elementIdMap.has(element)) {\n        elementIdMap.set(element, ++elementId);\n    }\n    return elementIdMap.get(element);\n};\n// 存储唯一ID及事件处理\nconst handlersMap = new Map();\n/**\n * 获取元素上的事件处理器数组\n * @param element\n */\nconst getHandlers = (element) => {\n    const id = getElementId(element);\n    return handlersMap.get(id) || handlersMap.set(id, []).get(id);\n};\n/**\n * 解析事件名中的命名空间\n */\nexport const parse = (type) => {\n    const parts = type.split('.');\n    return {\n        type: parts[0],\n        namespace: parts.slice(1).sort().join(' '),\n    };\n};\n/**\n * 命名空间匹配规则\n */\nconst matcherFor = (namespace) => {\n    return new RegExp('(?:^| )' + namespace.replace(' ', ' .* ?') + '(?: |$)');\n};\n/**\n * 获取匹配的事件\n * @param element\n * @param type\n * @param func\n * @param selector\n */\nconst getMatchedHandlers = (element, type, func, selector) => {\n    const event = parse(type);\n    return getHandlers(element).filter((handler) => {\n        return (handler &&\n            (!event.type || handler.type === event.type) &&\n            (!event.namespace ||\n                matcherFor(event.namespace).test(handler.namespace)) &&\n            (!func || getElementId(handler.func) === getElementId(func)) &&\n            (!selector || handler.selector === selector));\n    });\n};\n/**\n * 添加事件监听\n * @param element\n * @param types\n * @param func\n * @param data\n * @param selector\n */\nexport const add = (element, types, func, data, selector) => {\n    // 传入 data.useCapture 来设置 useCapture: true\n    let useCapture = false;\n    if (isObjectLike(data) && data.useCapture) {\n        useCapture = true;\n    }\n    types.split(' ').forEach((type) => {\n        if (!type) {\n            return;\n        }\n        const event = parse(type);\n        const callFn = (e, elem) => {\n            const result = func.apply(elem, \n            // @ts-ignore\n            e.detail === null ? [e] : [e].concat(e.detail));\n            if (result === false) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        };\n        const proxyFn = (e) => {\n            if (e.namespace && !matcherFor(e.namespace).test(event.namespace)) {\n                return;\n            }\n            e.data = data;\n            if (selector) {\n                // 事件代理\n                $(element)\n                    .find(selector)\n                    .get()\n                    .reverse()\n                    .forEach((elem) => {\n                    if (elem === e.target || contains(elem, e.target)) {\n                        callFn(e, elem);\n                    }\n                });\n            }\n            else {\n                // 不使用事件代理\n                callFn(e, element);\n            }\n        };\n        const handler = {\n            type: event.type,\n            namespace: event.namespace,\n            func,\n            selector,\n            id: getHandlers(element).length,\n            proxy: proxyFn,\n        };\n        getHandlers(element).push(handler);\n        // @ts-ignore\n        element.addEventListener(handler.type, proxyFn, useCapture);\n    });\n};\n/**\n * 移除事件监听\n * @param element\n * @param types\n * @param func\n * @param selector\n */\nexport const remove = (element, types, func, selector) => {\n    const handlersInElement = getHandlers(element);\n    const removeEvent = (handler) => {\n        delete handlersInElement[handler.id];\n        // @ts-ignore\n        element.removeEventListener(handler.type, handler.proxy, false);\n    };\n    if (!types) {\n        handlersInElement.forEach((handler) => {\n            removeEvent(handler);\n        });\n    }\n    else {\n        types.split(' ').forEach((type) => {\n            if (type) {\n                getMatchedHandlers(element, type, func, selector).forEach((handler) => {\n                    removeEvent(handler);\n                });\n            }\n        });\n    }\n};\n", "import { $ } from '../$.js';\nimport { parse, MduiCustomEvent } from '../shared/event.js';\nimport './each.js';\n$.fn.trigger = function (name, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndetail = null, options) {\n    const { type, namespace } = parse(name);\n    const event = new MduiCustomEvent(type, {\n        detail,\n        data: null,\n        namespace,\n        bubbles: true,\n        cancelable: false,\n        composed: true,\n        ...options,\n    });\n    return this.each((_, element) => {\n        element.dispatchEvent(event);\n    });\n};\n", "import { isUndefined, eachObject, eachArray } from '../shared/helper.js';\nexport function extend(target, ...objectN) {\n    eachArray(objectN, (object) => {\n        eachObject(object, (prop, value) => {\n            if (!isUndefined(value)) {\n                target[prop] = value;\n            }\n        });\n    });\n    return target;\n}\n", "import { getWindow } from 'ssr-window';\nimport { extend } from '../functions/extend.js';\nimport { eachObject, isUndefined } from './helper.js';\n// 全局事件名\nexport const ajaxStart = 'ajaxStart';\nexport const ajaxSuccess = 'ajaxSuccess';\nexport const ajaxError = 'ajaxError';\nexport const ajaxComplete = 'ajaxComplete';\n// 全局配置参数\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const globalOptions = {};\n/**\n * 判断此请求方法是否通过查询字符串提交参数\n * @param method 请求方法，大写\n */\nexport const isQueryStringData = (method) => {\n    return ['GET', 'HEAD'].includes(method);\n};\n/**\n * 添加参数到 URL 上，且 URL 中不存在 ? 时，自动把第一个 & 替换为 ?\n * @param url\n * @param query\n */\nexport const appendQuery = (url, query) => {\n    return `${url}&${query}`.replace(/[&?]{1,2}/, '?');\n};\n/**\n * url 是否跨域\n * @param url\n */\nexport const isCrossDomain = (url) => {\n    const window = getWindow();\n    return (/^([\\w-]+:)?\\/\\/([^/]+)/.test(url) && RegExp.$2 !== window.location.host);\n};\n/**\n * HTTP 状态码是否表示请求成功\n * @param status\n */\nexport const isHttpStatusSuccess = (status) => {\n    return (status >= 200 && status < 300) || [0, 304].includes(status);\n};\n/**\n * 合并请求参数，参数优先级：options > globalOptions > defaults\n * @param options\n */\nexport const mergeOptions = (options) => {\n    // 默认参数\n    const defaults = {\n        url: '',\n        method: 'GET',\n        data: '',\n        processData: true,\n        async: true,\n        cache: true,\n        username: '',\n        password: '',\n        headers: {},\n        xhrFields: {},\n        statusCode: {},\n        dataType: '',\n        contentType: 'application/x-www-form-urlencoded',\n        timeout: 0,\n        global: true,\n    };\n    // globalOptions 中的回调函数不合并\n    eachObject(globalOptions, (key, value) => {\n        const callbacks = [\n            'beforeSend',\n            'success',\n            'error',\n            'complete',\n            'statusCode',\n        ];\n        if (!callbacks.includes(key) && !isUndefined(value)) {\n            defaults[key] = value;\n        }\n    });\n    return extend({}, defaults, options);\n};\n", "import { isObjectLike, eachObject, eachArray } from '../shared/helper.js';\n/**\n * 将数组或对象序列化，序列化后的字符串可作为 URL 查询字符串使用\n *\n * 若传入数组，则格式必须和 serializeArray 方法的返回值一样\n * @param obj 对象或数组\n * @example\n```js\nparam({ width: 1680, height: 1050 });\n// width=1680&height=1050\n```\n * @example\n```js\nparam({ foo: { one: 1, two: 2 }})\n// foo[one]=1&foo[two]=2\n```\n * @example\n```js\nparam({ids: [1, 2, 3]})\n// ids[]=1&ids[]=2&ids[]=3\n```\n * @example\n```js\nparam([\n  {\"name\":\"name\",\"value\":\"mdui\"},\n  {\"name\":\"password\",\"value\":\"123456\"}\n])\n// name=mdui&password=123456\n```\n */\nexport const param = (obj) => {\n    if (!isObjectLike(obj) && !Array.isArray(obj)) {\n        return '';\n    }\n    const args = [];\n    const destructure = (key, value) => {\n        let keyTmp;\n        if (isObjectLike(value)) {\n            eachObject(value, (i, v) => {\n                keyTmp = Array.isArray(value) && !isObjectLike(v) ? '' : i;\n                destructure(`${key}[${keyTmp}]`, v);\n            });\n        }\n        else {\n            keyTmp =\n                value == null || value === '' ? '=' : `=${encodeURIComponent(value)}`;\n            args.push(encodeURIComponent(key) + keyTmp);\n        }\n    };\n    if (Array.isArray(obj)) {\n        eachArray(obj, ({ name, value }) => {\n            return destructure(name, value);\n        });\n    }\n    else {\n        eachObject(obj, destructure);\n    }\n    return args.join('&');\n};\n", "import { getDocument, getWindow } from 'ssr-window';\nimport { $ } from '../$.js';\nimport '../methods/trigger.js';\nimport { globalOptions, ajaxStart, ajaxSuccess, ajaxError, ajaxComplete, isQueryStringData, isCrossDomain, isHttpStatusSuccess, appendQuery, mergeOptions, } from '../shared/ajax.js';\nimport { isString, isUndefined, eachObject, eachArray, } from '../shared/helper.js';\nimport { param } from './param.js';\n/**\n * 发送 ajax 请求\n * @param options\n * @example\n```js\najax({\n  method: \"POST\",\n  url: \"some.php\",\n  data: { name: \"John\", location: \"Boston\" }\n}).then(function( msg ) {\n  alert( \"Data Saved: \" + msg );\n});\n```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const ajax = (options) => {\n    const document = getDocument();\n    const window = getWindow();\n    // 是否已取消请求\n    let isCanceled = false;\n    // ajaxStart、ajaxError、ajaxComplete 事件参数\n    // @ts-ignore\n    const eventParams = {};\n    // ajaxSuccess 事件参数\n    // @ts-ignore\n    const successEventParams = {};\n    // 参数合并\n    const mergedOptions = mergeOptions(options);\n    const method = mergedOptions.method.toUpperCase();\n    let { data, url } = mergedOptions;\n    url = url || window.location.toString();\n    const { processData, async, cache, username, password, headers, xhrFields, statusCode, dataType, contentType, timeout, global, } = mergedOptions;\n    // 需要发送的数据\n    // GET/HEAD 请求和 processData 为 true 时，转换为查询字符串格式，特殊格式不转换\n    const isMethodQueryString = isQueryStringData(method);\n    if (data &&\n        (isMethodQueryString || processData) &&\n        !isString(data) &&\n        !(data instanceof ArrayBuffer) &&\n        !(data instanceof Blob) &&\n        !(data instanceof Document) &&\n        !(data instanceof FormData)) {\n        data = param(data);\n    }\n    // 对于 GET、HEAD 类型的请求，把 data 数据添加到 URL 中\n    if (data && isMethodQueryString) {\n        // 查询字符串拼接到 URL 中\n        url = appendQuery(url, data);\n        data = null;\n    }\n    /**\n     * 触发事件和回调函数\n     * @param event\n     * @param callback\n     * @param args\n     */\n    const trigger = (event, callback, ...args) => {\n        // 触发全局事件\n        if (global) {\n            $(document).trigger(event, callback === 'success' ? successEventParams : eventParams);\n        }\n        // 触发 ajax 回调和事件\n        let resultGlobal;\n        let resultCustom;\n        // 全局回调\n        if (callback in globalOptions) {\n            resultGlobal = globalOptions[callback](...args);\n        }\n        // 自定义回调\n        if (mergedOptions[callback]) {\n            resultCustom = mergedOptions[callback](...args);\n        }\n        // beforeSend 回调返回 false 时取消 ajax 请求\n        if (callback === 'beforeSend' &&\n            [resultGlobal, resultCustom].includes(false)) {\n            isCanceled = true;\n        }\n    };\n    // XMLHttpRequest 请求\n    const XHR = () => {\n        let textStatus;\n        return new Promise((resolve, reject) => {\n            const doReject = (reason) => {\n                return reject(new Error(reason));\n            };\n            // GET/HEAD 请求的缓存处理\n            if (isMethodQueryString && !cache) {\n                url = appendQuery(url, `_=${Date.now()}`);\n            }\n            // 创建 XHR\n            const xhr = new XMLHttpRequest();\n            xhr.open(method, url, async, username, password);\n            if (contentType ||\n                (data && !isMethodQueryString && contentType !== false)) {\n                xhr.setRequestHeader('Content-Type', contentType);\n            }\n            // 设置 Accept\n            if (dataType === 'json') {\n                xhr.setRequestHeader('Accept', 'application/json, text/javascript');\n            }\n            // 添加 headers\n            eachObject(headers, (key, value) => {\n                // undefined 值不发送，string 和 null 需要发送\n                if (!isUndefined(value)) {\n                    xhr.setRequestHeader(key, value + ''); // 把 null 转换成字符串\n                }\n            });\n            // 检查是否是跨域请求，跨域请求时不添加 X-Requested-With\n            if (!isCrossDomain(url)) {\n                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n            }\n            // 设置 xhr 选项\n            eachObject(xhrFields, (key, value) => {\n                xhr[key] = value;\n            });\n            eventParams.xhr = successEventParams.xhr = xhr;\n            eventParams.options = successEventParams.options = mergedOptions;\n            let xhrTimeout;\n            xhr.onload = () => {\n                if (xhrTimeout) {\n                    clearTimeout(xhrTimeout);\n                }\n                // AJAX 返回的 HTTP 响应码是否表示成功\n                const isSuccess = isHttpStatusSuccess(xhr.status);\n                // @ts-ignore\n                let responseData = undefined;\n                if (isSuccess) {\n                    textStatus =\n                        xhr.status === 204 || method === 'HEAD'\n                            ? 'nocontent'\n                            : xhr.status === 304\n                                ? 'notmodified'\n                                : 'success';\n                    if (dataType === 'json' ||\n                        (!dataType &&\n                            (xhr.getResponseHeader('content-type') || '').includes('json'))) {\n                        try {\n                            responseData =\n                                method === 'HEAD' ? undefined : JSON.parse(xhr.responseText);\n                            successEventParams.response = responseData;\n                        }\n                        catch (_err) {\n                            textStatus = 'parsererror';\n                            trigger(ajaxError, 'error', xhr, textStatus);\n                            doReject(textStatus);\n                        }\n                        if (textStatus !== 'parsererror') {\n                            trigger(ajaxSuccess, 'success', responseData, textStatus, xhr);\n                            resolve(responseData);\n                        }\n                    }\n                    else {\n                        responseData =\n                            method === 'HEAD'\n                                ? undefined\n                                : xhr.responseType === 'text' || xhr.responseType === ''\n                                    ? xhr.responseText\n                                    : xhr.response;\n                        successEventParams.response = responseData;\n                        trigger(ajaxSuccess, 'success', responseData, textStatus, xhr);\n                        resolve(responseData);\n                    }\n                }\n                else {\n                    textStatus = 'error';\n                    trigger(ajaxError, 'error', xhr, textStatus);\n                    doReject(textStatus);\n                }\n                // statusCode\n                eachArray([globalOptions.statusCode ?? {}, statusCode], (func) => {\n                    if (func[xhr.status]) {\n                        if (isSuccess) {\n                            func[xhr.status](responseData, textStatus, xhr);\n                        }\n                        else {\n                            func[xhr.status](xhr, textStatus);\n                        }\n                    }\n                });\n                trigger(ajaxComplete, 'complete', xhr, textStatus);\n            };\n            xhr.onerror = () => {\n                if (xhrTimeout) {\n                    clearTimeout(xhrTimeout);\n                }\n                trigger(ajaxError, 'error', xhr, xhr.statusText);\n                trigger(ajaxComplete, 'complete', xhr, 'error');\n                doReject(xhr.statusText);\n            };\n            xhr.onabort = () => {\n                let statusText = 'abort';\n                if (xhrTimeout) {\n                    statusText = 'timeout';\n                    clearTimeout(xhrTimeout);\n                }\n                trigger(ajaxError, 'error', xhr, statusText);\n                trigger(ajaxComplete, 'complete', xhr, statusText);\n                doReject(statusText);\n            };\n            // ajax start 回调\n            trigger(ajaxStart, 'beforeSend', xhr, mergedOptions);\n            if (isCanceled) {\n                return doReject('cancel');\n            }\n            // Timeout\n            if (timeout > 0) {\n                xhrTimeout = window.setTimeout(() => xhr.abort(), timeout);\n            }\n            // 发送 XHR\n            xhr.send(data);\n        });\n    };\n    return XHR();\n};\n", "import { css } from 'lit';\nexport const style = css `:host{display:inline-block;width:1em;height:1em;font-weight:400;font-family:'Material Icons';font-display:block;font-style:normal;line-height:1;direction:ltr;letter-spacing:normal;white-space:nowrap;text-transform:none;word-wrap:normal;-webkit-font-smoothing:antialiased;text-rendering:optimizelegibility;-moz-osx-font-smoothing:grayscale;font-size:1.5rem}::slotted(svg),svg{width:100%;height:100%;fill:currentcolor}`;\n", "import { __decorate } from \"tslib\";\nimport { html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { unsafeSVG } from 'lit/directives/unsafe-svg.js';\nimport { until } from 'lit/directives/until.js';\nimport { ajax } from '@mdui/jq/functions/ajax.js';\nimport { MduiElement } from '@mdui/shared/base/mdui-element.js';\nimport { HasSlotController } from '@mdui/shared/controllers/has-slot.js';\nimport { componentStyle } from '@mdui/shared/lit-styles/component-style.js';\nimport { style } from './style.js';\n/**\n * @summary 图标组件\n *\n * ```html\n * <mdui-icon name=\"search\"></mdui-icon>\n * ```\n *\n * @slot - `svg` 图标的内容\n */\nlet Icon = class Icon extends MduiElement {\n    constructor() {\n        super(...arguments);\n        this.hasSlotController = new HasSlotController(this, '[default]');\n    }\n    render() {\n        const renderDefault = () => {\n            if (this.name) {\n                const [name, variant] = this.name.split('--');\n                const familyMap = new Map([\n                    ['outlined', 'Material Icons Outlined'],\n                    ['filled', 'Material Icons'],\n                    ['rounded', 'Material Icons Round'],\n                    ['sharp', 'Material Icons Sharp'],\n                    ['two-tone', 'Material Icons Two Tone'],\n                ]);\n                return html `<span translate=\"no\" style=\"${styleMap({ fontFamily: familyMap.get(variant) })}\">${name}</span>`;\n            }\n            if (this.src) {\n                return html `${until(ajax({ url: this.src }).then(unsafeSVG))}`;\n            }\n            return html ``;\n        };\n        return this.hasSlotController.test('[default]')\n            ? html `<slot></slot>`\n            : renderDefault();\n    }\n};\nIcon.styles = [componentStyle, style];\n__decorate([\n    property({ reflect: true })\n], Icon.prototype, \"name\", void 0);\n__decorate([\n    property({ reflect: true })\n], Icon.prototype, \"src\", void 0);\nIcon = __decorate([\n    customElement('mdui-icon')\n], Icon);\nexport { Icon };\n", "import { $ } from '../$.js';\nimport { remove } from '../shared/event.js';\nimport { isFunction, isObjectLike, returnFalse, eachObject, } from '../shared/helper.js';\nimport './each.js';\n$.fn.off = function (types, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nselector, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ncallback) {\n    // types 是对象\n    if (isObjectLike(types)) {\n        eachObject(types, (type, fn) => {\n            // this.off('click', undefined, function () {})\n            // this.off('click', '.box', function () {})\n            this.off(type, selector, fn);\n        });\n        return this;\n    }\n    // selector 不存在\n    if (selector === false || isFunction(selector)) {\n        callback = selector;\n        selector = undefined;\n        // this.off('click', undefined, function () {})\n    }\n    // callback 传入 `false`，相当于 `return false`\n    if (callback === false) {\n        callback = returnFalse;\n    }\n    return this.each(function () {\n        remove(this, types, callback, selector);\n    });\n};\n", "import { $ } from '../$.js';\nimport { add } from '../shared/event.js';\nimport { isString, isObjectLike, returnFalse, eachObject, } from '../shared/helper.js';\nimport './each.js';\nimport './off.js';\n$.fn.on = function (\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntypes, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nselector, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndata, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ncallback, one) {\n    // types 可以是 type/func 对象\n    if (isObjectLike(types)) {\n        // (types-Object, selector, data)\n        if (!isString(selector)) {\n            // (types-Object, data)\n            data = data || selector;\n            selector = undefined;\n        }\n        eachObject(types, (type, fn) => {\n            // selector 和 data 都可能是 undefined\n            // @ts-ignore\n            this.on(type, selector, data, fn, one);\n        });\n        return this;\n    }\n    if (data == null && callback == null) {\n        // (types, fn)\n        callback = selector;\n        data = selector = undefined;\n    }\n    else if (callback == null) {\n        if (isString(selector)) {\n            // (types, selector, fn)\n            callback = data;\n            data = undefined;\n        }\n        else {\n            // (types, data, fn)\n            callback = data;\n            data = selector;\n            selector = undefined;\n        }\n    }\n    if (callback === false) {\n        callback = returnFalse;\n    }\n    else if (!callback) {\n        return this;\n    }\n    // $().one()\n    if (one) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const _this = this;\n        const origCallback = callback;\n        callback = function (event, ...dataN) {\n            _this.off(event.type, selector, callback);\n            return origCallback.call(this, event, ...dataN);\n        };\n    }\n    return this.each(function () {\n        add(this, types, callback, data, selector);\n    });\n};\n", "import { $ } from '../$.js';\nimport { removeChild } from '../shared/dom.js';\nimport './each.js';\nimport './is.js';\n$.fn.remove = function (selector) {\n    return this.each((_, element) => {\n        if (!selector || $(element).is(selector)) {\n            removeChild(element);\n        }\n    });\n};\n", "import { $ } from '../$.js';\nimport { eachArray } from '../shared/helper.js';\nimport './each.js';\nimport './get.js';\neachArray(['insertBefore', 'insertAfter'], (name, nameIndex) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    $.fn[name] = function (target) {\n        const $element = nameIndex ? $(this.get().reverse()) : this; // 顺序和 jQuery 保持一致\n        const $target = $(target);\n        const result = [];\n        $target.each((index, target) => {\n            if (!target.parentNode) {\n                return;\n            }\n            $element.each((_, element) => {\n                const newItem = index\n                    ? element.cloneNode(true)\n                    : element;\n                const existingItem = nameIndex ? target.nextSibling : target;\n                result.push(newItem);\n                target.parentNode.insertBefore(newItem, existingItem);\n            });\n        });\n        return $(nameIndex ? result.reverse() : result);\n    };\n});\n", "import { isArrayLike, eachArray, eachObject } from '../shared/helper.js';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-function-type\nexport function each(target, callback) {\n    // eachArray 回调函数是 value, key，这里的 each 函数是 key, value\n    return isArrayLike(target)\n        ? eachArray(target, (value, index) => {\n            return callback.call(value, index, value);\n        })\n        : eachObject(target, callback);\n}\n", "import { getWindow } from 'ssr-window';\nimport { each } from './each.js';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-function-type\nexport function map(elements, callback) {\n    const window = getWindow();\n    let value;\n    const ret = [];\n    each(elements, (i, element) => {\n        value = callback.call(window, element, i);\n        if (value != null) {\n            ret.push(value);\n        }\n    });\n    return [].concat(...ret);\n}\n", "import { $ } from '../$.js';\nimport { map } from '../functions/map.js';\nimport { JQ } from '../shared/core.js';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n$.fn.map = function (callback) {\n    return new JQ(map(this, (element, i) => {\n        return callback.call(element, i, element);\n    }));\n};\n", "import { $ } from '../$.js';\nimport { createElement, appendChild } from '../shared/dom.js';\nimport { eachArray } from '../shared/helper.js';\nimport './insertAfter.js';\nimport './insertBefore.js';\nimport './map.js';\nimport './remove.js';\neachArray(['appendTo', 'prependTo'], (name, nameIndex) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    $.fn[name] = function (target) {\n        const extraChilds = [];\n        const $target = $(target).map((_, element) => {\n            const childNodes = element.childNodes;\n            const childLength = childNodes.length;\n            if (childLength) {\n                return childNodes[nameIndex ? 0 : childLength - 1];\n            }\n            const child = createElement('div');\n            appendChild(element, child);\n            extraChilds.push(child);\n            return child;\n        });\n        const $result = this[nameIndex ? 'insertBefore' : 'insertAfter']($target);\n        $(extraChilds).remove();\n        return $result;\n    };\n});\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of class names to truthy values.\n */\nexport interface ClassInfo {\n  readonly [name: string]: string | boolean | number;\n}\n\nclass ClassMapDirective extends Directive {\n  /**\n   * Stores the ClassInfo object applied to a given AttributePart.\n   * Used to unset existing values when a new ClassInfo object is applied.\n   */\n  private _previousClasses?: Set<string>;\n  private _staticClasses?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'class' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        '`classMap()` can only be used in the `class` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(classInfo: ClassInfo) {\n    // Add spaces to ensure separation from static classes\n    return (\n      ' ' +\n      Object.keys(classInfo)\n        .filter((key) => classInfo[key])\n        .join(' ') +\n      ' '\n    );\n  }\n\n  override update(part: AttributePart, [classInfo]: DirectiveParameters<this>) {\n    // Remember dynamic classes on the first render\n    if (this._previousClasses === undefined) {\n      this._previousClasses = new Set();\n      if (part.strings !== undefined) {\n        this._staticClasses = new Set(\n          part.strings\n            .join(' ')\n            .split(/\\s/)\n            .filter((s) => s !== '')\n        );\n      }\n      for (const name in classInfo) {\n        if (classInfo[name] && !this._staticClasses?.has(name)) {\n          this._previousClasses.add(name);\n        }\n      }\n      return this.render(classInfo);\n    }\n\n    const classList = part.element.classList;\n\n    // Remove old classes that no longer apply\n    for (const name of this._previousClasses) {\n      if (!(name in classInfo)) {\n        classList.remove(name);\n        this._previousClasses!.delete(name);\n      }\n    }\n\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n      // We explicitly want a loose truthy check of `value` because it seems\n      // more convenient that '' and 0 are skipped.\n      const value = !!classInfo[name];\n      if (\n        value !== this._previousClasses.has(name) &&\n        !this._staticClasses?.has(name)\n      ) {\n        if (value) {\n          classList.add(name);\n          this._previousClasses.add(name);\n        } else {\n          classList.remove(name);\n          this._previousClasses.delete(name);\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies dynamic CSS classes.\n *\n * This must be used in the `class` attribute and must be the only part used in\n * the attribute. It takes each property in the `classInfo` argument and adds\n * the property name to the element's `classList` if the property value is\n * truthy; if the property value is falsy, the property name is removed from\n * the element's `class`.\n *\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\n * truthy.\n *\n * @param classInfo\n */\nexport const classMap = directive(ClassMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {ClassMapDirective};\n", "/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {nothing, ElementPart} from '../lit-html.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\n\n/**\n * Creates a new Ref object, which is container for a reference to an element.\n */\nexport const createRef = <T = Element>() => new Ref<T>();\n\n/**\n * An object that holds a ref value.\n */\nclass Ref<T = Element> {\n  /**\n   * The current Element value of the ref, or else `undefined` if the ref is no\n   * longer rendered.\n   */\n  readonly value?: T;\n}\n\nexport type {Ref};\n\ninterface RefInternal {\n  value: Element | undefined;\n}\n\n// When callbacks are used for refs, this map tracks the last value the callback\n// was called with, for ensuring a directive doesn't clear the ref if the ref\n// has already been rendered to a new spot. It is double-keyed on both the\n// context (`options.host`) and the callback, since we auto-bind class methods\n// to `options.host`.\nconst lastElementForContextAndCallback = new WeakMap<\n  object,\n  WeakMap<Function, Element | undefined>\n>();\n\nexport type RefOrCallback<T = Element> = Ref<T> | ((el: T | undefined) => void);\n\nclass RefDirective extends AsyncDirective {\n  private _element?: Element;\n  private _ref?: RefOrCallback;\n  private _context?: object;\n\n  render(_ref?: RefOrCallback) {\n    return nothing;\n  }\n\n  override update(part: ElementPart, [ref]: Parameters<this['render']>) {\n    const refChanged = ref !== this._ref;\n    if (refChanged && this._ref !== undefined) {\n      // The ref passed to the directive has changed;\n      // unset the previous ref's value\n      this._updateRefValue(undefined);\n    }\n    if (refChanged || this._lastElementForRef !== this._element) {\n      // We either got a new ref or this is the first render;\n      // store the ref/element & update the ref value\n      this._ref = ref;\n      this._context = part.options?.host;\n      this._updateRefValue((this._element = part.element));\n    }\n    return nothing;\n  }\n\n  private _updateRefValue(element: Element | undefined) {\n    if (!this.isConnected) {\n      element = undefined;\n    }\n    if (typeof this._ref === 'function') {\n      // If the current ref was called with a previous value, call with\n      // `undefined`; We do this to ensure callbacks are called in a consistent\n      // way regardless of whether a ref might be moving up in the tree (in\n      // which case it would otherwise be called with the new value before the\n      // previous one unsets it) and down in the tree (where it would be unset\n      // before being set). Note that element lookup is keyed by\n      // both the context and the callback, since we allow passing unbound\n      // functions that are called on options.host, and we want to treat\n      // these as unique \"instances\" of a function.\n      const context = this._context ?? globalThis;\n      let lastElementForCallback =\n        lastElementForContextAndCallback.get(context);\n      if (lastElementForCallback === undefined) {\n        lastElementForCallback = new WeakMap();\n        lastElementForContextAndCallback.set(context, lastElementForCallback);\n      }\n      if (lastElementForCallback.get(this._ref) !== undefined) {\n        this._ref.call(this._context, undefined);\n      }\n      lastElementForCallback.set(this._ref, element);\n      // Call the ref with the new element value\n      if (element !== undefined) {\n        this._ref.call(this._context, element);\n      }\n    } else {\n      (this._ref as RefInternal)!.value = element;\n    }\n  }\n\n  private get _lastElementForRef() {\n    return typeof this._ref === 'function'\n      ? lastElementForContextAndCallback\n          .get(this._context ?? globalThis)\n          ?.get(this._ref)\n      : this._ref?.value;\n  }\n\n  override disconnected() {\n    // Only clear the box if our element is still the one in it (i.e. another\n    // directive instance hasn't rendered its element to it before us); that\n    // only happens in the event of the directive being cleared (not via manual\n    // disconnection)\n    if (this._lastElementForRef === this._element) {\n      this._updateRefValue(undefined);\n    }\n  }\n\n  override reconnected() {\n    // If we were manually disconnected, we can safely put our element back in\n    // the box, since no rendering could have occurred to change its state\n    this._updateRefValue(this._element);\n  }\n}\n\n/**\n * Sets the value of a Ref object or calls a ref callback with the element it's\n * bound to.\n *\n * A Ref object acts as a container for a reference to an element. A ref\n * callback is a function that takes an element as its only argument.\n *\n * The ref directive sets the value of the Ref object or calls the ref callback\n * during rendering, if the referenced element changed.\n *\n * Note: If a ref callback is rendered to a different element position or is\n * removed in a subsequent render, it will first be called with `undefined`,\n * followed by another call with the new element it was rendered to (if any).\n *\n * ```js\n * // Using Ref object\n * const inputRef = createRef();\n * render(html`<input ${ref(inputRef)}>`, container);\n * inputRef.value.focus();\n *\n * // Using callback\n * const callback = (inputElement) => inputElement.focus();\n * render(html`<input ${ref(callback)}>`, container);\n * ```\n */\nexport const ref = directive(RefDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RefDirective};\n", "import { $ } from '../$.js';\nimport { getAttribute, setAttribute } from '../shared/attributes.js';\nimport { isElement, isFunction, eachArray } from '../shared/helper.js';\nimport './each.js';\neachArray(['add', 'remove', 'toggle'], (name) => {\n    $.fn[`${name}Class`] = function (className) {\n        if (name === 'remove' && !arguments.length) {\n            return this.each((_, element) => {\n                setAttribute(element, 'class', '');\n            });\n        }\n        return this.each((i, element) => {\n            if (!isElement(element)) {\n                return;\n            }\n            const classes = (isFunction(className)\n                ? className.call(element, i, getAttribute(element, 'class', ''))\n                : className)\n                .split(' ')\n                .filter((name) => name);\n            eachArray(classes, (cls) => {\n                element.classList[name](cls);\n            });\n        });\n    };\n});\n", "import { eachObject, toCamelCase, eachArray, isUndefined, isString, } from './helper.js';\nconst weakMap = new WeakMap();\n/**\n * 获取元素上的所有数据\n * @param element\n */\nexport const getAll = (element) => {\n    return weakMap.get(element) ?? {};\n};\n/**\n * 获取元素上的的一个数据\n * @param element\n * @param keyOriginal\n */\nexport const get = (element, keyOriginal) => {\n    const data = getAll(element);\n    const key = toCamelCase(keyOriginal);\n    return key in data ? data[key] : undefined;\n};\n/**\n * 在上设置键值对数据\n * @param element\n * @param object\n */\nexport const setAll = (element, object) => {\n    const data = getAll(element);\n    eachObject(object, (keyOriginal, value) => {\n        data[toCamelCase(keyOriginal)] = value;\n    });\n    weakMap.set(element, data);\n};\n/**\n * 在元素上设置一个数据\n * @param element\n * @param keyOriginal\n * @param value\n */\nexport const set = (element, keyOriginal, value) => {\n    setAll(element, { [keyOriginal]: value });\n};\n/**\n * 移除元素上所有数据\n * @param element\n */\nexport const removeAll = (element) => {\n    weakMap.delete(element);\n};\n/**\n * 移除元素上的多个数据\n * @param element\n * @param keysOriginal 键名组成的数组\n */\nexport const removeMultiple = (element, keysOriginal) => {\n    const data = getAll(element);\n    eachArray(keysOriginal, (keyOriginal) => {\n        const key = toCamelCase(keyOriginal);\n        delete data[key];\n    });\n    weakMap.set(element, data);\n};\nconst rbrace = /^(?:{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/;\n/**\n * dataset 中的值读取时进行转换\n * @param value\n */\nconst stringTransform = (value) => {\n    if (value === 'true') {\n        return true;\n    }\n    if (value === 'false') {\n        return false;\n    }\n    if (value === 'null') {\n        return null;\n    }\n    if (value === +value + '') {\n        return +value;\n    }\n    if (rbrace.test(value)) {\n        return JSON.parse(value);\n    }\n    return value;\n};\n// 若 value 不存在，则从 `dataset` 中获取值。key 需要自行转为驼峰法\nexport const dataAttr = (element, key, value) => {\n    if (isUndefined(value) && element.nodeType === 1) {\n        value = element.dataset[key];\n        if (isString(value)) {\n            try {\n                value = stringTransform(value);\n            }\n            catch (_err) {\n                /* empty */\n            }\n        }\n    }\n    return value;\n};\n", "import { $ } from '../$.js';\nimport { dataAttr, get, getAll, set, setAll } from '../shared/data.js';\nimport { isUndefined, isObjectLike, eachObject, toCamelCase, } from '../shared/helper.js';\nimport './each.js';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n$.fn.data = function (key, value) {\n    // 获取所有值\n    if (isUndefined(key)) {\n        if (!this.length) {\n            return undefined;\n        }\n        const element = this[0];\n        const resultData = getAll(element);\n        // window, document 上不存在 `dataset`\n        if (element.nodeType !== 1) {\n            return resultData;\n        }\n        // 若值未通过 data 方法设置，则从 `dataset` 中获取值。dataset 中读取的 key 会自动转为驼峰法\n        eachObject(element.dataset, (key) => {\n            resultData[key] = dataAttr(element, key, resultData[key]);\n        });\n        return resultData;\n    }\n    // 同时设置多个值\n    if (isObjectLike(key)) {\n        return this.each(function () {\n            setAll(this, key);\n        });\n    }\n    // value 传入了 undefined\n    if (arguments.length === 2 && isUndefined(value)) {\n        return this;\n    }\n    // 设置值\n    if (!isUndefined(value)) {\n        return this.each(function () {\n            set(this, key, value);\n        });\n    }\n    // 获取值\n    if (!this.length) {\n        return undefined;\n    }\n    return dataAttr(this[0], toCamelCase(key), get(this[0], key));\n};\n", "import { $ } from '../$.js';\nimport { isFunction, isString } from '../shared/helper.js';\nimport './is.js';\nimport './map.js';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n$.fn.filter = function (selector) {\n    if (isFunction(selector)) {\n        return this.map((index, element) => {\n            return selector.call(element, index, element) ? element : undefined;\n        });\n    }\n    if (isString(selector)) {\n        return this.map((_, element) => {\n            return $(element).is(selector) ? element : undefined;\n        });\n    }\n    const $selector = $(selector);\n    return this.map((_, element) => {\n        return $selector.get().includes(element) ? element : undefined;\n    });\n};\n", "import { $ } from '../$.js';\nimport { JQ } from '../shared/core.js';\n$.fn.slice = function (...args) {\n    return new JQ([].slice.apply(this, args));\n};\n", "import { $ } from '../$.js';\nimport { JQ } from '../shared/core.js';\nimport './slice.js';\n$.fn.eq = function (index) {\n    const ret = index === -1 ? this.slice(index) : this.slice(index, +index + 1);\n    return new JQ(ret);\n};\n", "import { getDocument } from 'ssr-window';\nimport { $ } from '../$.js';\nimport './css.js';\nimport './map.js';\n/**\n * 返回最近的用于定位的父元素\n */\n$.fn.offsetParent = function () {\n    const document = getDocument();\n    return this.map(function () {\n        let offsetParent = this.offsetParent;\n        while (offsetParent && $(offsetParent).css('position') === 'static') {\n            offsetParent = offsetParent.offsetParent;\n        }\n        return offsetParent || document.documentElement;\n    });\n};\n", "import { $ } from '../$.js';\nimport './css.js';\nimport './eq.js';\nimport './offset.js';\nimport './offsetParent.js';\nconst floatStyle = ($element, name) => {\n    return parseFloat($element.css(name));\n};\n// @ts-ignore\n$.fn.position = function () {\n    if (!this.length) {\n        return undefined;\n    }\n    const $element = this.eq(0);\n    let currentOffset;\n    let parentOffset = {\n        left: 0,\n        top: 0,\n    };\n    if ($element.css('position') === 'fixed') {\n        currentOffset = $element[0].getBoundingClientRect();\n    }\n    else {\n        currentOffset = $element.offset();\n        const $offsetParent = $element.offsetParent();\n        parentOffset = $offsetParent.offset();\n        parentOffset.top += floatStyle($offsetParent, 'border-top-width');\n        parentOffset.left += floatStyle($offsetParent, 'border-left-width');\n    }\n    return {\n        top: currentOffset.top - parentOffset.top - floatStyle($element, 'margin-top'),\n        left: currentOffset.left -\n            parentOffset.left -\n            floatStyle($element, 'margin-left'),\n    };\n};\n", "import { $ } from '../$.js';\nimport { extend } from '../functions/extend.js';\nimport { isFunction } from '../shared/helper.js';\nimport './css.js';\nimport './each.js';\nimport './position.js';\nconst get = (element) => {\n    if (!element.getClientRects().length) {\n        return { top: 0, left: 0 };\n    }\n    const { top, left } = element.getBoundingClientRect();\n    const { pageYOffset, pageXOffset } = element.ownerDocument\n        .defaultView;\n    return {\n        top: top + pageYOffset,\n        left: left + pageXOffset,\n    };\n};\nconst set = (element, value, index) => {\n    const $element = $(element);\n    const position = $element.css('position');\n    if (position === 'static') {\n        $element.css('position', 'relative');\n    }\n    const currentOffset = get(element);\n    const currentTopString = $element.css('top');\n    const currentLeftString = $element.css('left');\n    let currentTop;\n    let currentLeft;\n    const calculatePosition = (position === 'absolute' || position === 'fixed') &&\n        (currentTopString + currentLeftString).includes('auto');\n    if (calculatePosition) {\n        const currentPosition = $element.position();\n        currentTop = currentPosition.top;\n        currentLeft = currentPosition.left;\n    }\n    else {\n        currentTop = parseFloat(currentTopString);\n        currentLeft = parseFloat(currentLeftString);\n    }\n    const computedValue = isFunction(value)\n        ? value.call(element, index, extend({}, currentOffset))\n        : value;\n    $element.css({\n        top: computedValue.top != null\n            ? computedValue.top - currentOffset.top + currentTop\n            : undefined,\n        left: computedValue.left != null\n            ? computedValue.left - currentOffset.left + currentLeft\n            : undefined,\n    });\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n$.fn.offset = function (value) {\n    // 获取坐标\n    if (!arguments.length) {\n        if (!this.length) {\n            return undefined;\n        }\n        return get(this[0]);\n    }\n    // 设置坐标\n    return this.each(function (index) {\n        set(this, value, index);\n    });\n};\n", "import { css } from 'lit';\nexport const style = css `:host{position:absolute;top:0;left:0;display:block;width:100%;height:100%;overflow:hidden;pointer-events:none}.surface{position:absolute;top:0;left:0;width:100%;height:100%;transition-duration:280ms;transition-property:background-color;pointer-events:none;transition-timing-function:var(--mdui-motion-easing-standard)}.hover{background-color:rgba(var(--mdui-comp-ripple-state-layer-color,var(--mdui-color-on-surface)),var(--mdui-state-layer-hover))}:host-context([focus-visible]) .focused{background-color:rgba(var(--mdui-comp-ripple-state-layer-color,var(--mdui-color-on-surface)),var(--mdui-state-layer-focus))}.dragged{background-color:rgba(var(--mdui-comp-ripple-state-layer-color,var(--mdui-color-on-surface)),var(--mdui-state-layer-dragged))}.wave{position:absolute;z-index:1;background-color:rgb(var(--mdui-comp-ripple-state-layer-color,var(--mdui-color-on-surface)));border-radius:50%;transform:translate3d(0,0,0) scale(.4);opacity:0;animation:225ms ease 0s 1 normal forwards running mdui-comp-ripple-radius-in,75ms ease 0s 1 normal forwards running mdui-comp-ripple-opacity-in;pointer-events:none}.out{transform:translate3d(var(--mdui-comp-ripple-transition-x,0),var(--mdui-comp-ripple-transition-y,0),0) scale(1);animation:150ms ease 0s 1 normal none running mdui-comp-ripple-opacity-out}@keyframes mdui-comp-ripple-radius-in{from{transform:translate3d(0,0,0) scale(.4);animation-timing-function:var(--mdui-motion-easing-standard)}to{transform:translate3d(var(--mdui-comp-ripple-transition-x,0),var(--mdui-comp-ripple-transition-y,0),0) scale(1)}}@keyframes mdui-comp-ripple-opacity-in{from{opacity:0;animation-timing-function:linear}to{opacity:var(--mdui-state-layer-pressed)}}@keyframes mdui-comp-ripple-opacity-out{from{animation-timing-function:linear;opacity:var(--mdui-state-layer-pressed)}to{opacity:0}}`;\n", "import { __decorate } from \"tslib\";\nimport { html } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { createRef, ref } from 'lit/directives/ref.js';\nimport { $ } from '@mdui/jq/$.js';\nimport '@mdui/jq/methods/addClass.js';\nimport '@mdui/jq/methods/children.js';\nimport '@mdui/jq/methods/css.js';\nimport '@mdui/jq/methods/data.js';\nimport '@mdui/jq/methods/each.js';\nimport '@mdui/jq/methods/filter.js';\nimport '@mdui/jq/methods/innerHeight.js';\nimport '@mdui/jq/methods/innerWidth.js';\nimport '@mdui/jq/methods/offset.js';\nimport '@mdui/jq/methods/on.js';\nimport '@mdui/jq/methods/prependTo.js';\nimport '@mdui/jq/methods/remove.js';\nimport { MduiElement } from '@mdui/shared/base/mdui-element.js';\nimport { booleanConverter } from '@mdui/shared/helpers/decorator.js';\nimport { componentStyle } from '@mdui/shared/lit-styles/component-style.js';\nimport { style } from './style.js';\n/**\n * 处理点击时的涟漪动画；及添加 hover、focused、dragged 的背景色\n * 背景色通过在 .surface 元素上添加对应的 class 实现\n * 阴影在 ripple-mixin 中处理，通过在 :host 元素上添加 attribute 供 CSS 选择器添加样式\n */\nlet Ripple = class Ripple extends MduiElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * 是否禁用涟漪动画\n         */\n        this.noRipple = false;\n        this.hover = false;\n        this.focused = false;\n        this.dragged = false;\n        this.surfaceRef = createRef();\n    }\n    startPress(event) {\n        if (this.noRipple) {\n            return;\n        }\n        const $surface = $(this.surfaceRef.value);\n        const surfaceHeight = $surface.innerHeight();\n        const surfaceWidth = $surface.innerWidth();\n        // 点击位置坐标\n        let touchStartX;\n        let touchStartY;\n        if (!event) {\n            // 未传入事件对象，涟漪从中间扩散\n            touchStartX = surfaceWidth / 2;\n            touchStartY = surfaceHeight / 2;\n        }\n        else {\n            // 传入了事件对象，涟漪从点击位置扩散\n            const touchPosition = typeof TouchEvent !== 'undefined' &&\n                event instanceof TouchEvent &&\n                event.touches.length\n                ? event.touches[0]\n                : event;\n            const offset = $surface.offset();\n            // 点击位置不在 surface 内，不执行\n            if (touchPosition.pageX < offset.left ||\n                touchPosition.pageX > offset.left + surfaceWidth ||\n                touchPosition.pageY < offset.top ||\n                touchPosition.pageY > offset.top + surfaceHeight) {\n                return;\n            }\n            touchStartX = touchPosition.pageX - offset.left;\n            touchStartY = touchPosition.pageY - offset.top;\n        }\n        // 涟漪直径\n        const diameter = Math.max(Math.pow(Math.pow(surfaceHeight, 2) + Math.pow(surfaceWidth, 2), 0.5), 48);\n        // 涟漪扩散动画\n        const translateX = `${-touchStartX + surfaceWidth / 2}px`;\n        const translateY = `${-touchStartY + surfaceHeight / 2}px`;\n        const translate = `translate3d(${translateX}, ${translateY}, 0) scale(1)`;\n        // 涟漪 DOM 元素\n        $('<div class=\"wave\"></div>')\n            .css({\n            width: diameter,\n            height: diameter,\n            marginTop: -diameter / 2,\n            marginLeft: -diameter / 2,\n            left: touchStartX,\n            top: touchStartY,\n        })\n            .each((_, wave) => {\n            wave.style.setProperty('--mdui-comp-ripple-transition-x', translateX);\n            wave.style.setProperty('--mdui-comp-ripple-transition-y', translateY);\n        })\n            .prependTo(this.surfaceRef.value)\n            .each((_, wave) => wave.clientLeft) // 重绘\n            .css('transform', translate)\n            .on('animationend', function (e) {\n            const event = e;\n            if (event.animationName === 'mdui-comp-ripple-radius-in') {\n                $(this).data('filled', true); // 扩散动画完成后，添加标记\n            }\n        });\n    }\n    endPress() {\n        const $waves = $(this.surfaceRef.value)\n            .children()\n            .filter((_, wave) => !$(wave).data('removing'))\n            .data('removing', true);\n        const hideAndRemove = ($waves) => {\n            $waves\n                .addClass('out')\n                .each((_, wave) => wave.clientLeft) // 重绘\n                .on('animationend', function () {\n                $(this).remove();\n            });\n        };\n        // 扩散动画未完成，先完成扩散，再隐藏并移除\n        $waves\n            .filter((_, wave) => !$(wave).data('filled'))\n            .on('animationend', function (e) {\n            const event = e;\n            if (event.animationName === 'mdui-comp-ripple-radius-in') {\n                hideAndRemove($(this));\n            }\n        });\n        // 扩散动画已完成，直接隐藏并移除\n        hideAndRemove($waves.filter((_, wave) => !!$(wave).data('filled')));\n    }\n    startHover() {\n        this.hover = true;\n    }\n    endHover() {\n        this.hover = false;\n    }\n    startFocus() {\n        this.focused = true;\n    }\n    endFocus() {\n        this.focused = false;\n    }\n    startDrag() {\n        this.dragged = true;\n    }\n    endDrag() {\n        this.dragged = false;\n    }\n    render() {\n        return html `<div ${ref(this.surfaceRef)} class=\"surface ${classMap({\n            hover: this.hover,\n            focused: this.focused,\n            dragged: this.dragged,\n        })}\"></div>`;\n    }\n};\nRipple.styles = [componentStyle, style];\n__decorate([\n    property({\n        type: Boolean,\n        reflect: true,\n        converter: booleanConverter,\n        attribute: 'no-ripple',\n    })\n], Ripple.prototype, \"noRipple\", void 0);\n__decorate([\n    state()\n], Ripple.prototype, \"hover\", void 0);\n__decorate([\n    state()\n], Ripple.prototype, \"focused\", void 0);\n__decorate([\n    state()\n], Ripple.prototype, \"dragged\", void 0);\nRipple = __decorate([\n    customElement('mdui-ripple')\n], Ripple);\nexport { Ripple };\n", "export default function cc(names) {\n  if (typeof names === \"string\" || typeof names === \"number\") return \"\" + names\n\n  let out = \"\"\n\n  if (Array.isArray(names)) {\n    for (let i = 0, tmp; i < names.length; i++) {\n      if ((tmp = cc(names[i])) !== \"\") {\n        out += (out && \" \") + tmp\n      }\n    }\n  } else {\n    for (let k in names) {\n      if (names[k]) out += (out && \" \") + k\n    }\n  }\n\n  return out\n}\n", "import { html, nothing } from 'lit';\nexport const nothingTemplate = html `${nothing}`;\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\n\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = <T>(value: T) => value ?? nothing;\n", "import { __decorate } from \"tslib\";\nimport { html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nexport const AnchorMixin = (superclass) => {\n    class AnchorMixinClass extends superclass {\n        renderAnchor({ id, className, part, content = html `<slot></slot>`, refDirective, tabIndex, }) {\n            return html `<a ${refDirective} id=\"${ifDefined(id)}\" class=\"_a ${className ? className : ''}\" part=\"${ifDefined(part)}\" href=\"${ifDefined(this.href)}\" download=\"${ifDefined(this.download)}\" target=\"${ifDefined(this.target)}\" rel=\"${ifDefined(this.rel)}\" tabindex=\"${ifDefined(tabIndex)}\">${content}</a>`;\n        }\n    }\n    __decorate([\n        property({ reflect: true })\n    ], AnchorMixinClass.prototype, \"href\", void 0);\n    __decorate([\n        property({ reflect: true })\n    ], AnchorMixinClass.prototype, \"download\", void 0);\n    __decorate([\n        property({ reflect: true })\n    ], AnchorMixinClass.prototype, \"target\", void 0);\n    __decorate([\n        property({ reflect: true })\n    ], AnchorMixinClass.prototype, \"rel\", void 0);\n    return AnchorMixinClass;\n};\n", "import { $ } from '../$.js';\nimport { removeAttribute } from '../shared/attributes.js';\nimport { eachArray } from '../shared/helper.js';\nimport './each.js';\n$.fn.removeAttr = function (attributeName) {\n    const names = attributeName.split(' ').filter((name) => name);\n    return this.each(function () {\n        eachArray(names, (name) => {\n            removeAttribute(this, name);\n        });\n    });\n};\n", "import { __decorate } from \"tslib\";\nimport { property } from 'lit/decorators.js';\nimport { getDocument } from 'ssr-window';\nimport { $ } from '@mdui/jq/$.js';\nimport '@mdui/jq/methods/attr.js';\nimport '@mdui/jq/methods/css.js';\nimport '@mdui/jq/methods/each.js';\nimport '@mdui/jq/methods/removeAttr.js';\nimport { DefinedController } from '../controllers/defined.js';\nimport { booleanConverter } from '../helpers/decorator.js';\nlet isClick = true;\nconst document = getDocument();\ndocument.addEventListener('pointerdown', () => {\n    isClick = true;\n});\ndocument.addEventListener('keydown', () => {\n    isClick = false;\n});\n/**\n * 参考：https://github.com/adobe/spectrum-web-components/blob/main/tools/shared/src/focusable.ts\n */\nexport const FocusableMixin = (superclass) => {\n    class FocusableMixinClass extends superclass {\n        constructor() {\n            super(...arguments);\n            /**\n             * 是否在页面加载完成后自动获取焦点\n             */\n            this.autofocus = false;\n            /**\n             * 是否获得了焦点，不管是鼠标点击，还是键盘切换获得的焦点，都会添加该属性\n             * 添加到 :host 元素上，供 CSS 选择器添加样式\n             */\n            this.focused = false;\n            /**\n             * 是否通过键盘切换获得了焦点\n             * 添加到 :host 元素上，供 CSS 选择器添加样式\n             */\n            this.focusVisible = false;\n            this.focusableDefinedController = new DefinedController(this, { relatedElements: [''] });\n            this._manipulatingTabindex = false;\n            this._tabIndex = 0;\n        }\n        /**\n         * 元素在使用 Tab 键切换焦点时的顺序\n         */\n        get tabIndex() {\n            const $this = $(this);\n            if (this.focusElement === this) {\n                return Number($this.attr('tabindex') || -1);\n            }\n            const tabIndexAttribute = Number($this.attr('tabindex') || 0);\n            if (this.focusDisabled || tabIndexAttribute < 0) {\n                return -1;\n            }\n            if (!this.focusElement) {\n                return tabIndexAttribute;\n            }\n            return this.focusElement.tabIndex;\n        }\n        set tabIndex(tabIndex) {\n            if (this._manipulatingTabindex) {\n                this._manipulatingTabindex = false;\n                return;\n            }\n            const $this = $(this);\n            if (this.focusElement === this) {\n                if (tabIndex !== null) {\n                    this._tabIndex = tabIndex;\n                }\n                $this.attr('tabindex', this.focusDisabled ? null : tabIndex);\n                return;\n            }\n            const onPointerDown = () => {\n                if (this.tabIndex === -1) {\n                    this.tabIndex = 0;\n                    this.focus({ preventScroll: true });\n                }\n            };\n            if (tabIndex === -1) {\n                this.addEventListener('pointerdown', onPointerDown);\n            }\n            else {\n                this._manipulatingTabindex = true;\n                this.removeEventListener('pointerdown', onPointerDown);\n            }\n            if (tabIndex === -1 || this.focusDisabled) {\n                $this.attr('tabindex', -1);\n                if (tabIndex !== -1) {\n                    this.manageFocusElementTabindex(tabIndex);\n                }\n                return;\n            }\n            if (!this.hasAttribute('tabindex')) {\n                this._manipulatingTabindex = false;\n            }\n            this.manageFocusElementTabindex(tabIndex);\n        }\n        /**\n         * 父类要实现该属性，表示是否禁用 focus 状态\n         */\n        get focusDisabled() {\n            throw new Error('Must implement focusDisabled getter!');\n        }\n        /**\n         * 最终获得焦点的元素\n         */\n        get focusElement() {\n            throw new Error('Must implement focusElement getter!');\n        }\n        connectedCallback() {\n            super.connectedCallback();\n            this.updateComplete.then(() => {\n                requestAnimationFrame(() => {\n                    this.manageAutoFocus();\n                });\n            });\n        }\n        /**\n         * 模拟鼠标点击元素\n         */\n        click() {\n            if (this.focusDisabled) {\n                return;\n            }\n            if (this.focusElement !== this) {\n                this.focusElement.click();\n            }\n            else {\n                HTMLElement.prototype.click.apply(this);\n            }\n        }\n        /**\n         * 将焦点设置到当前元素。\n         *\n         * 可以传入一个对象作为参数，该对象的属性包括：\n         *\n         * * `preventScroll`：默认情况下，元素获取焦点后，页面会滚动以将该元素滚动到视图中。如果不希望页面滚动，可以将此属性设置为 `true`。\n         */\n        focus(options) {\n            if (this.focusDisabled || !this.focusElement) {\n                return;\n            }\n            if (this.focusElement !== this) {\n                this.focusElement.focus(options);\n            }\n            else {\n                HTMLElement.prototype.focus.apply(this, [options]);\n            }\n        }\n        /**\n         * 移除当前元素的焦点\n         */\n        blur() {\n            if (this.focusElement !== this) {\n                this.focusElement.blur();\n            }\n            else {\n                HTMLElement.prototype.blur.apply(this);\n            }\n        }\n        firstUpdated(changedProperties) {\n            super.firstUpdated(changedProperties);\n            this.focusElement.addEventListener('focus', () => {\n                this.focused = true;\n                this.focusVisible = !isClick;\n            });\n            this.focusElement.addEventListener('blur', () => {\n                this.focused = false;\n                this.focusVisible = false;\n            });\n        }\n        update(changedProperties) {\n            if (this._lastFocusDisabled === undefined ||\n                this._lastFocusDisabled !== this.focusDisabled) {\n                this._lastFocusDisabled = this.focusDisabled;\n                const $this = $(this);\n                if (this.focusDisabled) {\n                    $this.removeAttr('tabindex');\n                }\n                else {\n                    if (this.focusElement === this) {\n                        this._manipulatingTabindex = true;\n                        $this.attr('tabindex', this._tabIndex);\n                    }\n                    else if (this.tabIndex > -1) {\n                        $this.removeAttr('tabindex');\n                    }\n                }\n            }\n            super.update(changedProperties);\n        }\n        updated(changedProperties) {\n            super.updated(changedProperties);\n            if (this.focused && this.focusDisabled) {\n                this.blur();\n            }\n        }\n        async manageFocusElementTabindex(tabIndex) {\n            if (!this.focusElement) {\n                await this.updateComplete;\n            }\n            if (tabIndex === null) {\n                this.focusElement.removeAttribute('tabindex');\n            }\n            else {\n                this.focusElement.tabIndex = tabIndex;\n            }\n        }\n        manageAutoFocus() {\n            if (this.autofocus) {\n                this.dispatchEvent(new KeyboardEvent('keydown', {\n                    code: 'Tab',\n                }));\n                this.focusElement.focus();\n            }\n        }\n    }\n    __decorate([\n        property({\n            type: Boolean,\n            /**\n             * 哪些属性需要 reflect: true？\n             * 一般所有属性都需要 reflect，但以下情况除外：\n             * 1. 会频繁变更的属性\n             * 2. 属性同步会造成较大性能开销的属性\n             * 3. 复杂类型属性（数组、对象等，仅提供 property，不提供 attribute）\n             */\n            reflect: true,\n            converter: booleanConverter,\n        })\n    ], FocusableMixinClass.prototype, \"autofocus\", void 0);\n    __decorate([\n        property({\n            type: Boolean,\n            reflect: true,\n            converter: booleanConverter,\n        })\n    ], FocusableMixinClass.prototype, \"focused\", void 0);\n    __decorate([\n        property({\n            type: Boolean,\n            reflect: true,\n            converter: booleanConverter,\n            attribute: 'focus-visible',\n        })\n    ], FocusableMixinClass.prototype, \"focusVisible\", void 0);\n    __decorate([\n        property({ type: Number, attribute: 'tabindex' })\n    ], FocusableMixinClass.prototype, \"tabIndex\", null);\n    return FocusableMixinClass;\n};\n", "import { $ } from '../../$.js';\nimport { unique } from '../../functions/unique.js';\nimport { JQ } from '../../shared/core.js';\nimport { isElement } from '../../shared/helper.js';\nimport '../each.js';\nimport '../is.js';\nexport const dir = ($elements, nameIndex, node, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nselector, filter) => {\n    const ret = [];\n    let target;\n    $elements.each((_, element) => {\n        target = element[node];\n        // 不能包含最顶层的 document 元素\n        while (target && isElement(target)) {\n            // prevUntil, nextUntil, parentsUntil\n            if (nameIndex === 2) {\n                if (selector && $(target).is(selector)) {\n                    break;\n                }\n                if (!filter || $(target).is(filter)) {\n                    ret.push(target);\n                }\n            }\n            // prev, next, parent\n            else if (nameIndex === 0) {\n                if (!selector || $(target).is(selector)) {\n                    ret.push(target);\n                }\n                break;\n            }\n            // prevAll, nextAll, parents\n            else {\n                if (!selector || $(target).is(selector)) {\n                    ret.push(target);\n                }\n            }\n            target = target[node];\n        }\n    });\n    return new JQ(unique(ret));\n};\n", "import { $ } from '../$.js';\nimport { eachArray } from '../shared/helper.js';\nimport './get.js';\nimport { dir } from './utils/dir.js';\neachArray(['', 's', 'sUntil'], (name, nameIndex) => {\n    $.fn[`parent${name}`] = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    selector, filter) {\n        // parents、parentsUntil 需要把元素的顺序反向处理，以便和 jQuery 的结果一致\n        const $nodes = !nameIndex ? this : $(this.get().reverse());\n        return dir($nodes, nameIndex, 'parentNode', selector, filter);\n    };\n});\n", "import { $ } from '../$.js';\nimport { isString } from '../shared/helper.js';\nimport './children.js';\nimport './eq.js';\nimport './get.js';\nimport './parent.js';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n$.fn.index = function (selector) {\n    if (!arguments.length) {\n        return this.eq(0).parent().children().get().indexOf(this[0]);\n    }\n    if (isString(selector)) {\n        return $(selector).get().indexOf(this[0]);\n    }\n    return this.get().indexOf($(selector)[0]);\n};\n", "import { __decorate } from \"tslib\";\nimport { property } from 'lit/decorators.js';\nimport { $ } from '@mdui/jq/$.js';\nimport '@mdui/jq/methods/index.js';\nimport { isArrayLike } from '@mdui/jq/shared/helper.js';\nimport { booleanConverter } from '@mdui/shared/helpers/decorator.js';\nimport './index.js';\n/**\n * hover, pressed, dragged 三个属性用于添加到 rippleTarget 属性指定的元素上，供 CSS 选择题添加样式\n *\n * TODO: dragged 功能\n *\n * NOTE:\n * 不支持触控的屏幕上事件顺序为：pointerdown -> (8ms) -> mousedown -> pointerup -> (1ms) -> mouseup -> (1ms) -> click\n *\n * 支持触控的屏幕上事件顺序为：pointerdown -> (8ms) -> touchstart -> pointerup -> (1ms) -> touchend -> (5ms) -> mousedown -> mouseup -> click\n * pointermove 比较灵敏，有可能触发了 pointermove 但没有触发 touchmove\n *\n * 支持触摸笔的屏幕上事件顺序为：todo\n */\nexport const RippleMixin = (superclass) => {\n    class Mixin extends superclass {\n        constructor() {\n            super(...arguments);\n            /**\n             * 是否禁用涟漪动画\n             */\n            this.noRipple = false;\n            /**\n             * 当前激活的是第几个 <mdui-ripple>。仅一个组件中有多个 <mdui-ripple> 时可以使用该属性\n             * 若值为 undefined，则组件中所有 <mdui-ripple> 都激活\n             */\n            this.rippleIndex = undefined;\n            /**\n             * 获取当前激活的是第几个 <mdui-ripple>。仅一个组件中有多个 <mdui-ripple> 时可以使用该属性\n             * 若值为 undefined，则组件中所有 <mdui-ripple> 都激活\n             * 可在子类中手动指定该方法，指定需要激活的 ripple\n             */\n            this.getRippleIndex = () => this.rippleIndex;\n        }\n        /**\n         * 子类要添加该属性，指向 <mdui-ripple> 元素\n         * 如果一个组件中包含多个 <mdui-ripple> 元素，则这里可以是一个数组或 NodeList\n         */\n        get rippleElement() {\n            throw new Error('Must implement rippleElement getter!');\n        }\n        /**\n         * 子类要实现该属性，表示是否禁用 ripple\n         * 如果一个组件中包含多个 <mdui-ripple> 元素，则这里可以是一个数组；也可以是单个值，同时控制多个 <mdui-ripple> 元素\n         */\n        get rippleDisabled() {\n            throw new Error('Must implement rippleDisabled getter!');\n        }\n        /**\n         * 当前 <mdui-ripple> 元素相对于哪个元素存在，即 hover、pressed、dragged 属性要添加到哪个元素上，默认为 :host\n         * 如果需要修改该属性，则子类可以实现该属性\n         * 如果一个组件中包含多个 <mdui-ripple> 元素，则这里可以是一个数组；也可以是单个值，同时控制多个 <mdui-ripple> 元素\n         */\n        get rippleTarget() {\n            return this;\n        }\n        firstUpdated(changedProperties) {\n            super.firstUpdated(changedProperties);\n            const $rippleTarget = $(this.rippleTarget);\n            // 监听到事件时，是在第几个 <mdui-ripple> 上触发的事件，记录到 this.rippleIndex 中\n            const setRippleIndex = (event) => {\n                if (isArrayLike(this.rippleTarget)) {\n                    this.rippleIndex = $rippleTarget.index(event.target);\n                }\n            };\n            const rippleTargetArr = isArrayLike(this.rippleTarget)\n                ? this.rippleTarget\n                : [this.rippleTarget];\n            rippleTargetArr.forEach((rippleTarget) => {\n                rippleTarget.addEventListener('pointerdown', (event) => {\n                    setRippleIndex(event);\n                    this.startPress(event);\n                });\n                rippleTarget.addEventListener('pointerenter', (event) => {\n                    setRippleIndex(event);\n                    this.startHover(event);\n                });\n                rippleTarget.addEventListener('pointerleave', (event) => {\n                    setRippleIndex(event);\n                    this.endHover(event);\n                });\n                rippleTarget.addEventListener('focus', (event) => {\n                    setRippleIndex(event);\n                    this.startFocus();\n                });\n                rippleTarget.addEventListener('blur', (event) => {\n                    setRippleIndex(event);\n                    this.endFocus();\n                });\n            });\n        }\n        /**\n         * 若存在多个 <mdui-ripple>，但 rippleTarget 为同一个，则 hover 状态无法在多个 <mdui-ripple> 之间切换\n         * 所以把 startHover 和 endHover 设置为 protected，供子类调用\n         * 子类中，在 getRippleIndex() 的返回值变更前调用 endHover(event)，变更后调用 startHover(event)\n         */\n        startHover(event) {\n            if (event.pointerType !== 'mouse' || this.isRippleDisabled()) {\n                return;\n            }\n            this.getRippleTarget().setAttribute('hover', '');\n            this.getRippleElement().startHover();\n        }\n        endHover(event) {\n            if (event.pointerType !== 'mouse' || this.isRippleDisabled()) {\n                return;\n            }\n            this.getRippleTarget().removeAttribute('hover');\n            this.getRippleElement().endHover();\n        }\n        /**\n         * 当前激活的 <mdui-ripple> 元素是否被禁用\n         */\n        isRippleDisabled() {\n            const disabled = this.rippleDisabled;\n            if (!Array.isArray(disabled)) {\n                return disabled;\n            }\n            const rippleIndex = this.getRippleIndex();\n            if (rippleIndex !== undefined) {\n                return disabled[rippleIndex];\n            }\n            return disabled.length ? disabled[0] : false;\n        }\n        /**\n         * 获取当前激活的 <mdui-ripple> 元素实例\n         */\n        getRippleElement() {\n            const ripple = this.rippleElement;\n            if (!isArrayLike(ripple)) {\n                return ripple;\n            }\n            const rippleIndex = this.getRippleIndex();\n            if (rippleIndex !== undefined) {\n                return ripple[rippleIndex];\n            }\n            return ripple[0];\n        }\n        /**\n         * 获取当前激活的 <mdui-ripple> 元素相对于哪个元素存在\n         */\n        getRippleTarget() {\n            const target = this.rippleTarget;\n            if (!isArrayLike(target)) {\n                return target;\n            }\n            const rippleIndex = this.getRippleIndex();\n            if (rippleIndex !== undefined) {\n                return target[rippleIndex];\n            }\n            return target[0];\n        }\n        startFocus() {\n            if (this.isRippleDisabled()) {\n                return;\n            }\n            this.getRippleElement().startFocus();\n        }\n        endFocus() {\n            if (this.isRippleDisabled()) {\n                return;\n            }\n            this.getRippleElement().endFocus();\n        }\n        startPress(event) {\n            // 为鼠标时操作，仅响应鼠标左键点击\n            if (this.isRippleDisabled() || event.button) {\n                return;\n            }\n            const target = this.getRippleTarget();\n            target.setAttribute('pressed', '');\n            // 手指触摸触发涟漪\n            if (['touch', 'pen'].includes(event.pointerType)) {\n                let hidden = false;\n                // 手指触摸后，延迟一段时间触发涟漪，避免手指滑动时也触发涟漪\n                let timer = setTimeout(() => {\n                    timer = 0;\n                    this.getRippleElement().startPress(event);\n                }, 70);\n                const hideRipple = () => {\n                    // 如果手指没有移动，且涟漪动画还没有开始，则开始涟漪动画\n                    if (timer) {\n                        clearTimeout(timer);\n                        timer = 0;\n                        this.getRippleElement().startPress(event);\n                    }\n                    if (!hidden) {\n                        hidden = true;\n                        this.endPress();\n                    }\n                    target.removeEventListener('pointerup', hideRipple);\n                    target.removeEventListener('pointercancel', hideRipple);\n                };\n                // 手指移动后，移除涟漪动画\n                const touchMove = () => {\n                    if (timer) {\n                        clearTimeout(timer);\n                        timer = 0;\n                    }\n                    target.removeEventListener('touchmove', touchMove);\n                };\n                // pointermove 事件过于灵敏，可能在未触发 touchmove 的情况下，触发了 pointermove 事件，导致正常的点击操作没有显示涟漪\n                // 因此这里监听 touchmove 事件\n                target.addEventListener('touchmove', touchMove);\n                target.addEventListener('pointerup', hideRipple);\n                target.addEventListener('pointercancel', hideRipple);\n            }\n            // 鼠标点击触发涟漪，点击后立即触发涟漪（仅鼠标左键能触发涟漪）\n            if (event.pointerType === 'mouse' && event.button === 0) {\n                const hideRipple = () => {\n                    this.endPress();\n                    target.removeEventListener('pointerup', hideRipple);\n                    target.removeEventListener('pointercancel', hideRipple);\n                    target.removeEventListener('pointerleave', hideRipple);\n                };\n                this.getRippleElement().startPress(event);\n                target.addEventListener('pointerup', hideRipple);\n                target.addEventListener('pointercancel', hideRipple);\n                target.addEventListener('pointerleave', hideRipple);\n            }\n        }\n        endPress() {\n            if (this.isRippleDisabled()) {\n                return;\n            }\n            this.getRippleTarget().removeAttribute('pressed');\n            this.getRippleElement().endPress();\n        }\n        startDrag() {\n            if (this.isRippleDisabled()) {\n                return;\n            }\n            this.getRippleElement().startDrag();\n        }\n        endDrag() {\n            if (this.isRippleDisabled()) {\n                return;\n            }\n            this.getRippleElement().endDrag();\n        }\n    }\n    __decorate([\n        property({\n            type: Boolean,\n            reflect: true,\n            converter: booleanConverter,\n            attribute: 'no-ripple',\n        })\n    ], Mixin.prototype, \"noRipple\", void 0);\n    return Mixin;\n};\n"],
  "mappings": "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",
  "names": ["style", "ref", "contains", "window", "document", "window", "Icon", "target", "window", "ref", "name", "key", "document", "get", "set", "style", "Ripple", "event", "$waves", "style", "document"]
}
